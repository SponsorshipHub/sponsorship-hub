{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/venuesReducer.js","redux/reducers/oneEventReducer.js","redux/reducers/currentEventReducer.js","redux/reducers/sponsorReducer.js","redux/reducers/landingReducer.js","redux/reducers/resultsReducer.js","redux/reducers/eventTypeReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/venuesSaga.js","redux/sagas/oneEventSaga.js","redux/sagas/landingSaga.js","redux/sagas/postEventSaga.js","redux/sagas/sponsorSaga.js","redux/sagas/demoSaga.js","redux/sagas/index.js","components/Structure/LogOutButton/LogOutButton.js","components/Structure/Nav/Nav.js","components/Structure/Footer/Footer.js","components/Style/Style.jsx","components/Header/Header_small.jsx","components/Structure/LoginPage/LoginPage.js","components/Structure/RegisterPage/RegisterPage.js","components/Structure/ProtectedRoute/ProtectedRoute.js","components/Header/Header.jsx","components/LandingPage/LandingPage.jsx","components/LandingPage/ResultPage.jsx","components/Create/SponsorItem.jsx","components/Create/CreateSponsor.jsx","components/Create/CreateEvent.jsx","components/Create/CreateDemo.jsx","components/Create/EditEvent.jsx","components/Event/DemoView.jsx","components/Event/SponsorshipPackage.jsx","components/Event/SponsorshipView.jsx","components/Event/Venue.jsx","components/Event/Event.jsx","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","venuesReducer","setOneEvent","currentEventReducer","console","log","sponsorReducer","landing","results","eventType","rootReducer","errors","user","venues","oneEvent","currentEvent","sponsors","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","response","status","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","venuesSaga","fetchVenues","oneEventSaga","fetchOneEvent","res","landingSaga","getLanding","getDefaultResults","getResults","getAdvResults","eventTypes","startD","startDate","endD","endDate","minAttend","maxAttend","minSponsorPrice","maxSponsorPrice","params","postEventSaga","postEvent","venue_id","responseVenue","id","responseEvent","event_id","history","push","sponsorSaga","deleteSponsor","editSponsor","fetchSponsor","sendSponsor","delete","demoSaga","sendDemo","rootSaga","all","connect","props","Button","className","onClick","dispatch","Nav","Component","render","to","src","height","alt","this","color","access_level","Footer","styles","header_small","backgroundImage","backgroundSize","backgroundPosition","width","position","top","zIndex","header_small_spacing","minHeight","left","transform","header","header_spacing","header_margin_small","marginTop","header_margin","landHead","backgroundColor","landHeadText","fontSize","textAlign","padding","landSearchTitle","landMargin","marginLeft","marginRight","paddingBottom","formControl","minWidth","advSearch","marginBottom","filterBtn","paddingLeft","paddingRight","margin","letterSpacing","landMedia","maxWidth","maxHeight","landCard","display","btn_def","background","fontWeight","btn_submit","box_grey","red","sponsorshipIcon","sponsorshipIconSmall","goodPercent","badPercent","modal","boxShadow","modalImg","maxWith","eventTextBoxes","borderRadius","coral","Header_small","classes","Box","withStyles","LoginPage","username","password","login","event","preventDefault","handleInputChangeFor","propertyName","setState","target","value","role","onSubmit","htmlFor","name","onChange","RegisterPage","ComponentToProtect","component","otherProps","ComponentToShow","Header","LandingPage","handleSearch","alert","handleState","handleStart","handleEnd","handleEvent","events","componentDidMount","document","title","variant","Grid","item","xs","md","Typography","container","justify","spacing","TextField","fullWidth","label","InputLabel","bm","align","map","key","Card","CardContent","CardMedia","image","event_image_url","event_name","reduxState","ResultPage","openType","handleOpen","handleClose","handleType","handleAttendance","handleStartD","handleEndD","handleMinAttend","handleMaxAttend","handleMinSponsorPrice","handleMaxSponsorPrice","handleFilter","defaultValue","match","FormControl","Select","open","onClose","onOpen","types","MenuItem","SponsorItem","editMode","handleChange","property","handleDelete","sponsorItem","handleEditClick","handleSubmitClick","sponsor_image_url","sponsor_name","sponsor_price","sponsor_description","viewOrEdit","placeholder","fullHeight","multiline","sm","CreateSponsor","backClick","forwardClick","handleClick","mx","default_sponsor_name","CreateEvent","newVenue","year_established","start_date","end_date","event_website","event_status","event_type","estimated_attendance","event_notes","contact_name","contact_title","contact_email","contact_phone","event_facebook","event_instagram","event_twitter","event_description","event_sponsorship_kit","event_open","venue_open","state_open","venue_name","venue_address","venue_city","venue_state","venue_zipcode","venue_notes","venue_capacity","cancelSelect","nextClick","eventOpen","eventClose","eventSelector","venueOpen","venueClose","venueSelector","stateOpen","stateClose","stateSelector","venueSelect","cancelValue","String","mb","inputProps","maxLength","min","max","venue","Radio","checked","InputProps","startAdornment","InputAdornment","CreateDemo","gender1","female","gender2","male","gender3","other","income1","income2","income3","income4","income5","income6","income7","age1","age2","age3","age4","age5","age6","age7","resident1","resident2","Number","handleSubmit","genderPercent","incomePercent","agePercent","residentPercent","moment","require","type_id","format","DemoView","age","gender","income","residency","COLORS","COLORS2","COLORS3","COLORS4","RADIAN","Math","PI","componentDidUpdate","prevProps","my","cx","cy","labelLine","midAngle","innerRadius","outerRadius","index","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","age_range","dataKey","nameKey","entry","i","length","income_range","SponsorshipPackage","openModal","sponsorshipId","TableRow","sponsorship_id","TableCell","Dialog","aria-labelledby","aria-describedby","DialogTitle","SponsorshipView","sponsorship","Divider","Paper","TableContainer","Table","TableHead","TableBody","Venue","address","city","zipcode","p","Event","window","scrollTo","m","mt","mr","href","mainTheme","createMuiTheme","palette","primary","main","secondary","App","theme","exact","from","path","EditEvent","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b97140dd.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","// Reducer for GET ALL Venues - Utilized by venuesSaga.js\n\nconst venuesReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_VENUES':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default venuesReducer;","const setOneEvent = (state = {}, action) => {\n    switch(action.type){\n        case 'SET_ONE_EVENT':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default setOneEvent;","// Reducer for GET current event - Utilized by CreateEvent.jsx\n// LOOK INTO DELETING??\n\n\nconst currentEventReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_CURRENT_EVENT':\n            console.log('Action.Payload in Reducer is:', action.payload)\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default currentEventReducer;","const sponsorReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_SPONSORS':\n            console.log('in sponsorReducer', action.payload);\n\n            return action.payload;\n        case 'UNSET_SPONSORS':\n            return [];\n        default:\n            return state;\n    }\n};\n\n// sponsors will be on the redux state at:\n// state.userHistory\nexport default sponsorReducer;","const landing = (state = [], action) => {\n    console.log('---------> in landingReducer');\n    // get data for landing page featured events\n    if(action.type === 'GET_LANDING'){\n        return action.payload;\n    }\n    return state;\n};//end landingReducer\n\nexport default landing;","const results = (state = [], action) => {\n    console.log('---------> in resultsReducer');\n    // GET default data for results page \n    if (action.type === 'GET_DEFAULT_RESULTS'){\n        return action.payload;\n    }\n    //GET results from landing page search\n    else if (action.type === 'GET_RESULTS') {\n        return action.payload;\n    }\n    // GET results for adv search\n    else if (action.type === 'GET_ADV_RESULTS'){\n        console.log('YOU HAVE GOTTEN ADVANCED RESULTS', action.payload);\n        return action.payload;\n    }\n    return state;\n};//end results\n\nexport default results;","const eventType = (state = [], action) => {\n    if(action.type === 'GET_EVENT_TYPES'){\n        return action.payload;\n    }\n    return state;\n};//end eventType\n\nexport default eventType;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport venues from './venuesReducer';\nimport oneEvent from './oneEventReducer';\nimport currentEvent from './currentEventReducer';\nimport sponsors from './sponsorReducer';\nimport landing from './landingReducer';\nimport results from './resultsReducer';\nimport eventType from './eventTypeReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  venues,\n  oneEvent, // holds all the information for one event\n  currentEvent, // The current event that we just created and will edit\n  sponsors, //holds event specific sponsor information for add and edit pages.\n  landing, //will hold event data\n  results, //will hold data for results\n  eventType, //will hold data for event types\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// venuesSaga.js is utilized in CreateEvent.jsx to pull a list of Venues\n\nfunction * venuesSaga() {\n    yield takeLatest('FETCH_VENUES', fetchVenues);\n}\n\nfunction * fetchVenues() {\n    try{\n        const response = yield axios.get('/venue')\n        yield put({type: 'SET_VENUES', payload: response.data})\n    }\n    catch (error) {\n        console.log('Error in fetchVenues:', error)\n    }\n}\n\nexport default venuesSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// oneEventSaga get all the information for one event\n\nfunction* oneEventSaga() {\n    yield takeLatest('FETCH_ONE_EVENT', fetchOneEvent);\n}\n\nfunction* fetchOneEvent(action){\n    try{        \n        console.log(`oneEventSage:`, action.payload);\n        \n        const res = yield axios.get(`/event/${action.payload}`);\n        yield put({type: 'SET_ONE_EVENT', payload: res.data[0]});\n    }catch(err){\n        console.log(`ERROR in FETCH ONE EVENT saga:`, err);\n    }\n}\n\nexport default oneEventSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// watcher saga\nfunction* landingSaga(){\n    yield takeLatest('FETCH_LANDING', getLanding);\n    yield takeLatest('FETCH_RESULTS', getResults);\n    yield takeLatest('FETCH_DEFAULT_RESULTS', getDefaultResults);\n    yield takeLatest('FETCH_ADV_RESULTS', getAdvResults);\n    yield takeLatest('FETCH_EVENT_TYPES', eventTypes);\n};//end landingSaga\n\n// generator functions\n// this function controls the GET for the landing page featured events\nfunction* getLanding(){\n    // console.log('---------------> in fetchLanding saga');\n    try{\n        //send GET request for /landing and send to our reducer\n        const response = yield axios.get(`/landing`);\n        yield put({\n            type: 'GET_LANDING',\n            payload: response.data\n        })\n    }catch(err){\n        console.log('Error in landing saga:', err)\n    };//end try\n};//end getLanding\n\n//this function gets the default results for the page\nfunction* getDefaultResults(){\n    // console.log('--------> in getDefaultResults saga');\n    try{\n        const response = yield axios.get('/results');\n        yield put({\n            type: 'GET_DEFAULT_RESULTS',\n            payload: response.data\n        })\n    }catch(err){\n        console.log('Error in defaultResults saga:', err)\n    }\n};//end getDefaultResults\n\n//this function handles the results page on search from the landing page\nfunction* getResults(action){\n    let startD = action.payload.startDate;\n    let endD = action.payload.endDate;\n    let state = action.payload.state\n    // console.log('-------------> in getResults saga', action.payload);\n    try{\n        //send GET request for /results and send to our reducer\n        const response = yield axios.get(`/results/${state}/${startD}/${endD}`);\n        yield put({\n            type: 'GET_RESULTS',\n            payload: response.data\n        })\n    }catch(err){\n        console.log('Error in getResults saga');\n    }\n};//end getResults\n\n//this function handles the advanced search from the results view page\nfunction* getAdvResults(action){\n    let state = action.payload.state;\n    let startD = action.payload.startD;\n    let endD = action.payload.endD;\n    let type = action.payload.type;\n    let minAttend = action.payload.minAttend;\n    let maxAttend = action.payload.maxAttend;\n    let minSponsorPrice = action.payload.minSponsorPrice;\n    let maxSponsorPrice = action.payload.maxSponsorPrice;\n    console.log('----------> in getAdvResults', action.payload);\n    try{   \n        // const response = yield axios.get(`/results/${state}/${startD}/${endD}/${type}/${minAttend}/${maxAttend}/${minSponsorPrice}/${maxSponsorPrice}`);\n        const response = yield axios.get(`/results/filter`, { params: {\n            state, startD, endD, type, minAttend, maxAttend, minSponsorPrice, maxSponsorPrice\n        }})\n        yield put({\n            type: 'GET_ADV_RESULTS',\n            payload: response.data\n        })\n    }catch(err){\n        console.log('Error in getAdvResults saga')\n    }\n};//end getAdvResults\n\n// this function gets our event types so we can map through our event type selectors\nfunction* eventTypes(){\n    try{\n        const response = yield axios.get(`/landing/event-types`);\n        yield put({\n            type: 'GET_EVENT_TYPES',\n            payload: response.data\n        })\n    }catch(err){\n        console.log('error in getting event types:', err)\n    }\n};//end eventTypes\n\nexport default landingSaga;","\n\nimport { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// postEventSaga creates one venue and one event and returns the new event's id for future use\n\nfunction* postEventSaga() {\n    yield takeLatest('POST_EVENT', postEvent);\n}\n\nfunction* postEvent(action) {\n    try {\n        console.log('postEventSaga.js', action.payload)\n        // Create Venue First\n        let venue_id = action.payload.venue_id;\n        // console.log('Venue has ID of:', venue_id)\n            if (venue_id === 0) { \n                // console.log('Creating new venue...')\n                const responseVenue = yield axios.post(`/venue/create`, action.payload)\n                venue_id = responseVenue.data.id;\n                console.log('New venue has ID of:', venue_id)\n                }\n        // Create Event Next using venue id as :id\n        const responseEvent = yield axios.post(`/event/create/${venue_id}`, action.payload)\n        let event_id = responseEvent.data.id;\n        // console.log ('New Event has an ID of:', event_id)\n        yield put({ type: 'SET_CURRENT_EVENT', payload: event_id });\n        yield action.history.push(`/create-sponsor/${event_id}`) // Pushes history using YIELD!\n    } catch (err) {\n        console.log(`ERROR in FETCH ONE EVENT saga:`, err);\n    }\n}\n\nexport default postEventSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* sponsorSaga() {\n    yield takeLatest('FETCH_SPONSORS', fetchSponsor);\n    yield takeLatest('ADD_SPONSOR', sendSponsor);\n    yield takeLatest('DELETE_SPONSOR', deleteSponsor);\n    yield takeLatest('EDIT_SPONSOR', editSponsor);\n}\n\n//THE DELETE ROUTE\nfunction* deleteSponsor(action){\n    console.log(\"in deleteSponsor\", action.payload);\n    try{\n        yield axios.delete(`/sponsor/${action.payload.id}`);\n        yield put ({ type: 'FETCH_SPONSORS', payload: action.payload.event_id});\n    }catch(error){\n        console.log('DELETE failed', error); \n    }\n}\n//THE PUT ROUTE\nfunction* editSponsor(action){\n    console.log('in editSponsor', action.payload );\n    try{\n        yield axios.put(`/sponsor/edit`, action.payload);\n   yield put ({type: 'FETCH_SPONSORS', payload: action.payload.event_id});\n    }catch(error){\n        console.log('editSponsor failed/', error);\n        \n    }\n    \n\n}\n//The GET ROUTE\nfunction* fetchSponsor(action) {\n    console.log('in fetch sponsors', action.payload);\n    try{\n        const response = yield axios.get(`/sponsor/${action.payload}`);\n        yield put({type: 'SET_SPONSORS', payload: response.data});\n    }catch(error){\n        console.log('Sponsor GET request failed', error);\n\n    }\n}\n// the POST ROUTE\nfunction* sendSponsor(action){\n    console.log('in sendSponsor', action.payload);\n    try{\n        yield axios.post('/sponsor', action.payload);\n        yield put ({ type: 'FETCH_SPONSORS', payload: action.payload.id});\n    }catch(error){\n        console.log('add sponsor failed', error);\n        \n    }\n    \n}\n\n\nexport default sponsorSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* demoSaga(){\n    yield takeLatest('ADD_DEMO', sendDemo);\n}\n\n//The Demographic POST\nfunction* sendDemo(action){\n    console.log('in sendDemo', action.payload );\n    try{\n        yield axios.post(`/demo/gender`, action.payload);\n        yield axios.post(`/demo/income`, action.payload);\n        yield axios.post(`/demo/age`, action.payload);\n        yield axios.post(`/demo/resident`, action.payload);\n        yield action.history.push(`/event/${action.payload.id}`)\n//may need to add a FETCH call here if we want to review and edit\n    }catch(error){\n        console.log('add demo failed', error);\n        \n    }\n}\n\nexport default demoSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport venuesSaga from './venuesSaga';\nimport oneEventSaga from './oneEventSaga';\nimport landingSaga from './landingSaga';\nimport postEventSaga from './postEventSaga';\nimport sponsorSaga from './sponsorSaga';\nimport demoSaga from './demoSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    venuesSaga(),\n    oneEventSaga(),\n    postEventSaga(),\n    landingSaga(),\n    sponsorSaga(),\n    demoSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Typography, TextField, Box, Button } from '@material-ui/core';\n\nconst LogOutButton = props => (\n  <Button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >Logout</Button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\nimport { Grid, Typography, TextField, Box, Button } from '@material-ui/core';\n\nclass Nav extends Component {\n\n  render() {\n    return (\n      <div className=\"nav\">\n        <Link to=\"/home\">\n          <img id=\"hoverLogo\" src='./images/logo_white_drop_shadow.png' height=\"80vh\" alt=\"Sponsorship Hub\"/>\n        </Link>\n        <div className=\"nav-right\">\n          <Link className=\"nav-link\" to=\"/home/login\">\n            {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n            {this.props.user.id ? <Button color=\"secondary\">Home</Button> : <Button color=\"primary\">Login / Register</Button>}\n          </Link>\n          {/* Show the link to the info page and the logout button if the user is logged in */}\n          {this.props.user.access_level === 3 && <Button color=\"secondary\">Admin</Button>}\n          {this.props.user.id && (\n            <>\n              {/* <Link className=\"nav-link\" to=\"/info\">\n            Info Page\n          </Link> */}\n              <Button color=\"primary\" onClick={()=>this.props.dispatch({ type: 'LOGOUT' })}>Logout</Button>\n              {/* <LogOutButton className=\"nav-link\" /> */}\n            </>\n          )}\n          {/* Always show this link since the about page is not protected */}\n          {/* <Link className=\"nav-link\" to=\"/about\">\n        About\n      </Link> */}\n        </div>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React, { Component } from 'react';\nimport './Footer.css'\n\n// changed by Heather\nclass Footer extends Component{\n  render(){\n    return(\n      <footer>\n        &copy; Prime Digital Academy\n      </footer>\n    )\n  }\n};\n\nexport default Footer;\n","const styles = {\n    header_small: {\n        backgroundImage: `url(./images/header_darker_small.png)`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        height: '25vh',\n        width: '100%',\n        position: 'absolute',\n        top: '0px',\n        zIndex: '-1',\n        color: 'white',\n    },\n    header_small_spacing: {\n        color: 'black',\n        minHeight: '25vh',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50 %, -50 %)',\n    },\n    header: {\n        backgroundImage: `url(./images/header_darker.jpg)`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        height: '50vh',\n        width: '100%',\n        position: 'absolute',\n        top: '0px',\n        zIndex: '-1',\n        color: 'white',\n    },\n    header_spacing: {\n        color: 'black',\n        minHeight: '40vh',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50 %, -50 %)',\n    },\n    header_margin_small: {\n        marginTop: '20vh',\n    },\n    header_margin: {\n        marginTop: '27vh',\n        // boxShadow: '2px 2px 2px 2px'\n    },\n    landHead: {\n        backgroundColor: '#DDE2EC',\n    },\n    landHeadText: {\n        fontSize: '80px',\n        textAlign: 'center',\n        padding: '3%'\n    },\n    landSearchTitle: {\n        textAlign: 'center',\n        fontSize: '25px',\n        padding: '2%'\n    },\n    landMargin: {\n        marginLeft: '2%',\n        marginRight: '2%',\n        paddingBottom: '2%'\n    },\n    formControl: {\n        minWidth: '15%',\n        marginLeft: '1%'\n    },\n    advSearch: {\n        minWidth: '15%',\n        marginTop: '2%',\n        marginBottom: '2%'\n    },\n    filterBtn: {\n        paddingLeft: '8%',\n        paddingRight: '8%',\n        margin: '6%',\n        letterSpacing: '2px',\n    },\n    landMedia: {\n        maxWidth: '30vw',\n        maxHeight: '30vh'\n    },\n    landCard: {\n        display: 'inline-block',\n        maxWidth: '31vw',\n        maxHeight: '45vh',\n        minHeight: '30vh'\n    },\n    btn_def: {\n        background: 'linear-gradient(200deg, #F45255, #F45255)', // Extremely subtle gradient\n        color: 'white', // Button's text color\n        fontWeight: '900', // Font's boldness from 100-900\n            // transition: 'all 0.3s', // Optional Hover Effect\n            // '&:hover': {\n            //     boxShadow: '1px 1px 5px black',\n            // }\n    },\n    btn_submit: {\n        background: 'linear-gradient(200deg, #DEDEDE, #CCCCCC)', // Extremely subtle gradient\n        color: 'black', // Button's text color\n        // transition: 'all 0.3s', // Optional Hover Effect\n        // '&:hover': {\n        //     boxShadow: '1px 1px 5px black',\n        // }\n    },\n    box_grey: {\n        background: '#EAECED', // Color that Karl submitted\n        // background: '#ECECEC', // Adds a grey box to the background\n        margin: '0px'\n    },\n    margin: {\n        margin: '20px' // Adds a small margin to the page\n    },\n    red: {\n        color: 'red'\n    },\n    sponsorshipIcon: {\n        maxWidth: '100px' \n    },\n    sponsorshipIconSmall: {\n        maxWidth: '75px'\n    },\n\n    goodPercent: {\n        color: 'green'\n    },\n    badPercent: {\n        color: 'red'\n    },\n    modal: {\n        // position: 'absolute',\n        minWidth: '400px',\n        // backgroundColor: '#eaeced',\n        // border: '2px solid #000',\n        boxShadow: '0px 0px 1px 2px',\n        padding: '5px',\n        margin: 'auto',\n        marginTop: '10vh',\n    },\n    modalImg: {\n        maxWith: '300'\n    },\n    eventTextBoxes:{\n        minHeight: '100px',\n        borderRadius: '.8em',\n        backgroundColor: '#eaeced',\n    },\n    coral: {\n        color: '#F45255'\n    }\n}\n\nexport default styles;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, Grid, CardMedia, Typography, TextField, Box, Button } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\n\nclass Header_small extends Component {\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        return (\n            <>\n                <Box className={classes.header_small}>\n                    <Box className={classes.header_small_spacing}>Sponsorship Hub</Box>\n                </Box>        \n            </>\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nHeader_small.propTypes = { classes: PropTypes.object.isRequired };\n\n// const putStateOnProps = reduxState => ({reduxState});\nexport default connect()(withStyles(styles)(Header_small));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Box } from '@material-ui/core';\nimport Header_small from '../../Header/Header_small';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport styles from '../../Style/Style';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Header_small /><Box className={classes.header_margin} />\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// PropTypes allows us to import style.jsx for use\nLoginPage.propTypes = { classes: PropTypes.object.isRequired };\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(LoginPage));\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Box } from '@material-ui/core';\nimport Header_small from '../../Header/Header_small';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport styles from '../../Style/Style';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Header_small /><Box className={classes.header_margin} />\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// PropTypes allows us to import style.jsx for use\nRegisterPage.propTypes = { classes: PropTypes.object.isRequired };\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(RegisterPage));\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\n\nclass Header extends Component {\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        return (<>\n            <Box className={classes.header}>\n                <Box className={classes.header_spacing}>Sponsorship Hub</Box>\n            </Box>\n            \n            {/* <Grid><img src=\"../images/header_darker.jpg\" width=\"100%\" /></Grid> */}\n        </>)//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nHeader.propTypes = {classes: PropTypes.object.isRequired};\n\n// const putStateOnProps = reduxState => ({reduxState});\nexport default connect()(withStyles(styles)(Header));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button, Card, CardContent, InputLabel, CardMedia } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\nimport Header from '../Header/Header';\n\nclass LandingPage extends Component {\n\n    state = {\n        startDate: null,\n        endDate: null,\n        state: null,\n    };//end state\n\n    componentDidMount() {\n        document.title = \"Sponsorship Hub\"; // Sets browser's title\n        console.log('Landing Page has been MOUNTED');\n        // on landing page load, get our data for the featured events\n        this.props.dispatch({ type: 'FETCH_LANDING' });\n        // default our results so when we click back from a featured events results page shows data\n        this.props.dispatch({ type: 'FETCH_DEFAULT_RESULTS' });\n    };//end componentDidMount\n\n    handleSearch = () => {\n        console.log('search on Landing Page has been clicked');\n        //IF STATEMENT SO THAT THEY DO BOTH START AND END DATE IF SELECTED\n        if (this.state.startDate !== 'null' && this.state.endDate === 'null') {\n            alert('Please fill in both date inputs');\n            return\n        } else if (this.state.endDate !== 'null' && this.state.startDate === 'null'){\n            alert('Please fill in both date inputs');\n            return\n        };//end if statement\n        // on click of the search button, the user will be taken to the results view page\n        this.props.history.push(`/results/${this.state.state}/${this.state.startDate}/${this.state.endDate}`);\n        // send our inputs to our results view page\n        this.props.dispatch({ type: 'FETCH_RESULTS', payload: this.state })\n    };//end handleSearch\n\n    //handles state input change\n    handleState = (event) => {\n        console.log('setting input for state', event.target.value);\n        this.setState({ state: event.target.value });\n    };//end handle state\n\n    //handle start and end date selectors\n    handleStart = (event) => {\n        console.log('selected START date:', event.target.value);\n        // change the data of startDate\n        this.setState({ startDate: event.target.value });\n    };//end handleStart\n    handleEnd = (event) => {\n        console.log('selected END date:', event.target.value);\n        // change the data of endDate\n        this.setState({ endDate: event.target.value });\n    };//end handleEnd\n\n    // handleEvent allows the user to go to the page of the event on click\n    handleEvent = (events) => {\n        console.log('take me to the event', events);\n        this.props.history.push(`/event/${events.id}`)\n    };//end handleEvent\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Box>\n                {/* temporary header */}\n                <Header /><Box className={classes.header_margin} />\n                <Box>{this.props.user.access_level > 1 && <Button color=\"secondary\" onClick={() => this.props.history.push('/create-event')} variant=\"outlined\">Create Event</Button>}</Box>\n                \n                {/* <Box className={classes.landHead}>\n                    <Typography className={classes.landHeadText}>Sponsorship Hub</Typography>\n                </Box> */}\n\n                {/* section to hold search inputs */}\n                <Box className={classes.box_grey}>\n                    <Box className={classes.landMargin}>\n                        <Grid item xs={12} md={12}><Typography className={classes.landSearchTitle}>Search Events</Typography></Grid>\n                        {/* grid that wraps location and selector */}\n                        <Grid container justify=\"center\">\n                            {/* location and month selector options */}\n                            <Grid container justify=\"center\" spacing={2}>\n                                <Grid item xs={12} md={4}><TextField fullWidth={true} label=\"State\" onChange={(event) => this.handleState(event)} /></Grid>\n\n                                {/* month selector with date text fields */}\n                                <Grid item xs={12} md={2}>\n                                    <InputLabel>start date</InputLabel>\n                                    <TextField type=\"date\" onChange={(event) => this.handleStart(event)} />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <InputLabel>end date</InputLabel>\n                                    <TextField type=\"date\" onChange={(event) => this.handleEnd(event)} />\n                                </Grid>\n                            </Grid>\n                            {/* end location and month selector */}\n                            {/* button search grid */}\n                            <Grid item xs={12} md={1}><Button className={classes.advSearch} variant=\"outlined\" onClick={this.handleSearch}>Search</Button></Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n\n                {/* section that holds mapped EVENTS */}\n                <Box bm={2}>\n                    <Typography variant=\"h4\" align=\"center\">Featured Events</Typography>\n                    {/* BEGIN GRID */}\n                    <Grid container justify=\"space-evenly\">\n                        {this.props.landing.map(events =>\n                            <Box key={events.id}>\n                                <Card variant=\"outlined\" className={classes.landCard} onClick={(event) => this.handleEvent(events)}>\n                                    <CardContent>\n                                        <CardMedia className={classes.landMedia} component=\"img\" image={events.event_image_url} title={events.event_name} />\n                                    </CardContent>\n                                    <CardContent>\n                                        <Typography>{events.event_name}</Typography>\n                                    </CardContent>\n                                </Card>\n                            </Box>\n                        )}\n                        {/* end of mapping for landing page GET */}\n                    </Grid>\n                </Box>\n                {/* end of mapped data */}\n            </Box>\n            // Box that wraps page\n        )//end return\n    };//end render\n};//end LandingPage\n\n// PropTypes allows us to import style.jsx for use\nLandingPage.propTypes = { classes: PropTypes.object.isRequired };\n\nconst putStateOnProps = reduxState => ({\n    reduxState,\n    landing: reduxState.landing,\n    user: reduxState.user,\n});\n\nexport default connect(putStateOnProps)(withStyles(styles)(LandingPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button, FormControl, MenuItem, Select, InputLabel, Card, CardContent, CardMedia } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\n\nclass ResultPage extends Component {\n\n    state = {\n        openType: false,\n        type: '',\n        state: null,\n        startD: null,\n        endD: null,\n        minAttend: null,\n        maxAttend: null,\n        minSponsorPrice: null,\n        maxSponsorPrice: null\n    };//end state\n\n    componentDidMount() {\n        document.title = \"Sponsorship Hub - Results\"; // Sets browser's title\n        console.log('ResultPage has been MOUNTED');\n        // get our event types\n        this.props.dispatch({ type: 'FETCH_EVENT_TYPES' });\n    };//end componentDidMount\n\n    handleOpen = () => {\n        this.setState({ openType: true })\n    };//end handleOpen\n\n    handleClose = () => {\n        this.setState({ openType: false })\n    };// handleClose\n\n    handleType = (event) => {\n        this.setState({ type: event.target.value })\n    };//end handleChange\n\n    handleAttendance = (event) => {\n        this.setState({ type: event.target.value })\n    };//end handleAttendance\n\n    // handleEvent allows the user to go to the page of the event on click\n    handleEvent = (events) => {\n        console.log('take me to the event', events);\n        this.props.history.push(`/event/${events.id}`)\n    };//end handleEvent\n\n    //handleState allows the user to type in a state search\n    handleState = (event) => {\n        console.log('changing State in advanced search:', event.target.value);\n        //change value of state in our states\n        this.setState({ state: event.target.value })\n    };//end handleState\n\n    //handleStartD allows user to type select start date\n    handleStartD = (event) => {\n        console.log('selected START date:', event.target.value);\n        // change the data of startD\n        this.setState({ startD: event.target.value });\n    };//end handleStartD\n\n    //handleEndD allows user to type select end date\n    handleEndD = (event) => {\n        console.log('selected END date:', event.target.value);\n        // change the data of endD\n        this.setState({ endD: event.target.value });\n    };//end handleStartD\n\n    //handleType allows user to select type value which is a number\n    handleType = (event) => {\n        console.log('changing the event type:', event.target.value);\n        this.setState({ type: event.target.value })\n    };//end handleType\n\n    //handleMinAttend allows user to select minimum amount of attendees\n    handleMinAttend = (event) => {\n        console.log('changing minimum attendee:', event.target.value);\n        this.setState({ minAttend: event.target.value });\n    };//end handleMinAttend\n\n    //handleMaxAttend allows user to select maximum amount of attendees\n    handleMaxAttend = (event) => {\n        console.log('changing maximum attendee:', event.target.value);\n        this.setState({ maxAttend: event.target.value });\n    };//end handleMaxAttend\n\n    //handleMinSponsorPrice allows user to select minimum sponsorship price\n    handleMinSponsorPrice = (event) => {\n        console.log('changing minimum sponsorship price:', event.target.value);\n        this.setState({ minSponsorPrice: event.target.value });\n    };//end handleMinSponsorPrice\n\n    //handleMinSponsorPrice allows user to select maximum sponsorship price\n    handleMaxSponsorPrice = (event) => {\n        console.log('changing maximum sponsorship price:', event.target.value);\n        this.setState({ maxSponsorPrice: event.target.value });\n    };//end handleMaxSponsorPrice\n\n    /// waiting for karl /// HOUSE HOLD INCOME SEARCH\n\n\n    //handleFilter will filter the adv search\n    handleFilter = () => {\n        console.log('clicked on filter for advanced search');\n        this.props.dispatch({ type: 'FETCH_ADV_RESULTS', payload: this.state});\n    };//end handleFilter\n\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        return (\n            <Box>\n                {/* temporary header */}\n                <Grid className={classes.landHead} item md={12}>\n                    <Typography className={classes.landHeadText}>Sponsorship Hub</Typography>\n                </Grid>\n                {/* section that holds the advanced search filters */}\n                <Box className={classes.box_grey}>\n                    <Grid container justify=\"center\" spacing={2}>\n                        <Grid item xs={12} md={10}><Typography className={classes.landSearchTitle}>Advanced Search</Typography></Grid>\n                        {/* state and month selector options */}\n                        <Grid container justify=\"center\" spacing={2}>\n                            <Grid item xs={12} md={4}><TextField onChange={(event) => this.handleState(event)} defaultValue={this.props.match.params.state} fullWidth={true} label=\"State\" /></Grid>\n                            {/* month selector with date text fields */}\n                            <Grid item xs={12} md={2}>\n                                <InputLabel>search start date</InputLabel>\n                                <TextField onChange={(event) => this.handleStartD(event)} defaultValue={this.props.match.params.startDate} type=\"date\" />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <InputLabel>search end date</InputLabel>\n                                <TextField onChange={(event) => this.handleEndD(event)} defaultValue={this.props.match.params.endDate} type=\"date\" />\n                            </Grid>\n                        </Grid>\n\n                        {/* type and attendance selector options*/}\n                        <Grid container justify=\"center\">\n                            {/* begin TYPE selector option */}\n                            <Grid item xs={12} md={4}>\n                                <InputLabel>Type</InputLabel>\n                                <FormControl className={classes.advSearch} fullWidth={true}>\n                                    <Select variant=\"outlined\" open={this.state.open} onClose={this.handleClose} onOpen={this.handleOpen} value={this.state.type} onChange={(event) => this.handleType(event)}>\n                                    {this.props.types.map(types => \n                                            <MenuItem key={types.id} value={types.type}><em>{types.type}</em></MenuItem>\n                                    )}\n                                    </Select>\n                                </FormControl>\n                            </Grid> {/* END TYPE SELECTOR */}\n                            {/* begin ATTENDANCE selector */}\n                            <Grid item xs={12} md={2} className={classes.advSearch}>\n                                <TextField onChange={(event) => this.handleMinAttend(event)} label=\"Min Attendees\" />\n                            </Grid>\n                            <Grid item xs={12} md={2} className={classes.advSearch}>\n                                <TextField onChange={(event) => this.handleMaxAttend(event)} label=\"Max Attendees\" />\n                            </Grid>\n                            {/* END ATTENDANCE SELECTOR */}\n                        </Grid>\n\n                        {/* sponsorship cost and household income options */}\n                        <Grid container justify=\"center\" spacing={2}>\n                            {/* begin SPONSORSHIP PRICE selector */}\n                            <Grid item xs={12} md={2}>\n                                <TextField onChange={(event) => this.handleMinSponsorPrice(event)} fullWidth={true} label=\"Min Sponsorship Price\" />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <TextField onChange={(event) => this.handleMaxSponsorPrice(event)} fullWidth={true} label=\"Max Sponsorship Price\" />\n                            </Grid>\n                            {/* END SPONSORSHIP PRICE SELECTOR */}\n                            <Grid item xs={12} md={4}><TextField fullWidth={true} label=\"Household Income\" /></Grid>\n                        </Grid>\n                        {/* button grid that centers it */}\n                        <Grid container justify=\"center\" spacing={2}>\n                            <Grid item xs={12} md={1}><Button onClick={this.handleFilter} className={classes.filterBtn} variant=\"outlined\">Filter</Button></Grid>\n                        </Grid>\n                    </Grid>\n                    {/* END ADVANCED FILTER */}\n                </Box>\n                {/* BEGIN RESULTS VIEW */}\n                {/* section that holds mapped EVENTS */}\n                <Box bm={2}>\n                    <Typography variant=\"h4\" align=\"center\">Events</Typography>\n                    {/* BEGIN GRID */}\n                    <Grid container justify=\"space-evenly\">\n                        {this.props.results.map(events =>\n                            <Box key={events.id}>\n                                <Card variant=\"outlined\" className={classes.landCard} onClick={(event) => this.handleEvent(events)}>\n                                    <CardContent>\n                                        <CardMedia className={classes.landMedia} component=\"img\" image={events.event_image_url} title={events.event_name} />\n                                    </CardContent>\n                                    <CardContent>\n                                        <Typography>{events.event_name}</Typography>\n                                    </CardContent>\n                                </Card>\n                            </Box>\n                        )}\n                        {/* end of mapping for landing page GET */}\n                    </Grid>\n                </Box>\n                {/* end of mapped data */}\n                {/* END RESULTS DISPLAY */}\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nResultPage.propTypes = { classes: PropTypes.object.isRequired };\n\nconst putStateOnProps = reduxState => ({\n    results: reduxState.results,\n    types: reduxState.eventType\n});\nexport default connect(putStateOnProps)(withStyles(styles)(ResultPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport StarsIcon from '@material-ui/icons/Stars';\n\nclass SponsorItem extends Component {\n    state = {\n        editMode: false,\n\n    }\n    componentDidMount() {\n        console.log('in SponsorItem', this.props.sponsorItem);\n        this.setState({\n            id: this.props.sponsorItem.id,\n            sponsor_image_url: this.props.sponsorItem.sponsor_image_url,\n            sponsor_name: this.props.sponsorItem.sponsor_name,\n            sponsor_price: this.props.sponsorItem.sponsor_price,\n            sponsor_description: this.props.sponsorItem.sponsor_description,\n            event_id: this.props.match.params.id\n\n        })\n    }\n\n    handleChange = (event, property) => {\n        this.setState({\n            ...this.state,\n            [property]: event.target.value\n        })\n        console.log(this.state);\n\n    }\n\n    handleDelete = () => {\n        this.props.dispatch({ type: \"DELETE_SPONSOR\", payload: this.props.sponsorItem })\n        // window.location.reload();\n        // without this reload the undeleted sponsors disappear to\n    }\n\n    handleEditClick = () => {\n        this.setState({\n            editMode: !this.state.editMode\n        })\n\n    }\n\n    handleSubmitClick = () => {\n        this.setState({\n            editMode: !this.state.editMode\n        })\n        this.props.dispatch({ type: \"EDIT_SPONSOR\", payload: this.state })\n    }\n\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n\n\n        let viewOrEdit =\n            <Grid justify=\"center\" container item md={12}>\n                <Grid item md={2}>{this.props.sponsorItem.sponsor_image_url ?\n                    <img className={classes.sponsorshipIcon} src={this.props.sponsorItem.sponsor_image_url}></img> :\n                    <img className={classes.sponsorshipIconSmall} src=\"./images/sponsor_icon.png\"></img>\n                    }\n                </Grid>\n                <Grid container item md={7}>\n\n                    <Grid container item md={4}>\n                        <Grid item md={12}><Typography>{this.props.sponsorItem.sponsor_name}</Typography></Grid>\n                        <Grid item md={12}><Typography>${this.props.sponsorItem.sponsor_price}</Typography></Grid>\n                    </Grid>\n\n                    <Grid item md={8}><Typography>{this.props.sponsorItem.sponsor_description}</Typography></Grid>\n                </Grid>\n                <Grid item md={2}>\n                    <EditIcon onClick={this.handleEditClick}></EditIcon>\n                    <DeleteIcon onClick={this.handleDelete}></DeleteIcon>\n                </Grid>\n\n            </Grid>\n        if (this.state.editMode) {\n            viewOrEdit =\n\n                <Grid container spacing={3}>\n                    {/* input fields go here */}\n\n                    <Grid justify=\"center\" container item md={12}>\n                    <Grid item md={1}>{this.props.sponsorItem.sponsor_image_url ?\n                        <img className={classes.sponsorshipIcon} src={this.props.sponsorItem.sponsor_image_url}></img> :\n                        <img className={classes.sponsorshipIconSmall} src=\"./images/sponsor_icon.png\"></img>\n                        }\n                    </Grid>\n                    <Grid container item md={10}>\n\n                        <Grid container item md={4}>\n                            <Grid item md={12}><TextField fullWidth label=\"Package Name\" defaultValue={this.props.sponsorItem.sponsor_name} placeholder=\"Package Name\" onChange={(event) => this.handleChange(event, 'sponsor_name')}></TextField></Grid>\n                            <Grid item md={12}><TextField fullWidth label=\"Package Price\" type=\"number\" defaultValue={this.props.sponsorItem.sponsor_price} placeholder=\"$\" onChange={(event) => this.handleChange(event, 'sponsor_price')}></TextField></Grid>\n                        </Grid>\n\n                        <Grid item md={8}><TextField fullWidth fullHeight multiline variant=\"outlined\" label=\"Package Description\" defaultValue={this.props.sponsorItem.sponsor_description} placeholder=\"Package Description\" onChange={(event) => this.handleChange(event, 'sponsor_description')}></TextField></Grid>\n                    </Grid>\n                    <Grid item md={1}></Grid>\n                    <Grid item md={9}>\n                        <TextField fullWidth label=\"Image URL\" defaultValue={this.props.sponsorItem.sponsor_image_url} placeholder=\"http://\" onChange={(event) => this.handleChange(event, 'sponsor_image_url')}></TextField>\n                    </Grid>\n                        <Grid item md={1} sm={9}>\n                            <Button fullWidth className={classes.btn_def} onClick={this.handleSubmitClick}>Submit</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n        }\n\n\n        return (\n            <>\n                {viewOrEdit}\n            </>\n\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nSponsorItem.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = state => ({\n    sponsors: state.sponsors,\n\n});\n\n// const putStateOnProps = reduxState => ({reduxState});\nexport default connect(mapStateToProps)(withStyles(styles)(SponsorItem));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SponsorItem from './SponsorItem';\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button, Paper } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport StarsIcon from '@material-ui/icons/Stars';\n\nclass CreateSponsor extends Component {\n\n    state = {\n        id: this.props.match.params.id,\n        // hardcoded or MN State Fair, will need to change to the just created event in create or the selected event in edit\n        sponsor_name: \"\",\n        sponsor_price: \"\",\n        sponsor_image_url: \"./images/sponsor_icon.png\",\n        sponsor_description: \"\",\n\n    }\n\n    componentDidMount() {\n        this.props.dispatch({ type: \"FETCH_SPONSORS\", payload: this.state.id })\n    }\n\n    backClick = () => {\n        this.props.history.push(`/event/edit/${this.props.match.params.id}`)\n    }\n\n    forwardClick = () => {\n        this.props.history.push(`/create-demo/${this.props.match.params.id}`)\n    }\n\n    handleChange = (event, property) => {\n        this.setState({\n            ...this.state,\n            [property]: event.target.value\n        })\n        console.log(this.state);\n\n    }\n\n    // handleDelete = () => {\n    //     this.props.dispatch({ type: \"DELETE\", payload: this.props.sponsors.id})\n    // }\n    //I can't figure out how to identify and send the id of the sponsorItem clicked, considering shipping it down to a component\n\n    handleClick = () => {\n        this.props.dispatch({ type: 'ADD_SPONSOR', payload: this.state })\n        this.setState({\n            sponsor_name: \"\",\n            sponsor_price: \"\",\n            sponsor_image_url: \"\",\n            sponsor_description: \"\"\n        });\n        \n        console.log(this.state);\n    }\n   \n\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        return (\n            <Box>\n                {/* Breadcrumbs go up here */}\n                <Typography align=\"center\" variant=\"h2\">Create Sponsorship Package</Typography>\n                <Box mx={10} spacing={3}>\n                    {/* input fields go here */}\n                    <Grid justify=\"center\" container spacing={3}>\n                        <Grid item md={3} sm={9}>\n                            <TextField fullWidth label=\"Package Name\" defaultValue={this.state.default_sponsor_name} placeholder=\"Package Name\" onChange={(event) => this.handleChange(event, 'sponsor_name')}></TextField>\n                        </Grid>\n                        <Grid item md={3} sm={9}>\n                            <TextField fullWidth label=\"Package Price\" type=\"number\" placeholder=\"$\" onChange={(event) => this.handleChange(event, 'sponsor_price')}></TextField>\n                        </Grid>\n                        <Grid item md={3} sm={9}>\n                            <TextField fullWidth label=\"Image URL\" placeholder=\"http://\" onChange={(event) => this.handleChange(event, 'sponsor_image_url')}></TextField>\n                        </Grid>\n                        <Grid item md={8} sm={9}>\n                            <TextField fullWidth multiline variant=\"outlined\" label=\"Package Description\" placeholder=\"Package Description\" onChange={(event) => this.handleChange(event, 'sponsor_description')}></TextField>\n                        </Grid>\n                        <Grid item md={1} sm={9}>\n                            <Button className={classes.btn_def} onClick={this.handleClick}>Submit</Button>\n                        </Grid>\n                    </Grid>\n                </Box>\n                <Box>\n                    <Typography align=\"center\" variant=\"h2\">Current Packages</Typography>\n{/* existing sponsorships display here */}\n                    <Grid container >\n                        {\n                            this.props.sponsors.map(sponsorItem =>\n                                <SponsorItem key={sponsorItem.id} sponsorItem={sponsorItem} match={this.props.match}/>)}\n\n                       \n                    </Grid>\n          \n                    <Box mx={10} spacing={3}>\n                        <Grid justify=\"center\" container>\n                            <Grid item md={3} sm={6}>\n                                <Button fullWidth className={classes.btn_def} variant=\"outlined\" onClick={this.backClick}>Back</Button>\n                            </Grid>\n                            <Grid item md={3}></Grid>\n                            <Grid item md={3} sm={6}>\n                                <Button fullWidth className={classes.btn_def} variant=\"outlined\" onClick={this.forwardClick}>Next</Button>\n                            </Grid>\n                        </Grid>\n\n                    </Box>\n                </Box>\n\n            </Box>\n\n\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nCreateSponsor.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = state => ({\n    sponsors: state.sponsors,\n\n});\n\n// const putStateOnProps = reduxState => ({reduxState});\nexport default connect(mapStateToProps)(withStyles(styles)(CreateSponsor));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material UI Imports\nimport { withStyles } from '@material-ui/core/styles';\nimport { Divider, FormControl, InputAdornment, Radio, TextField, InputLabel, Select, MenuItem, Grid, Paper, Typography, Input, Box, Button } from '@material-ui/core';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\nimport Header_small from '../Header/Header_small';\n\nclass CreateEvent extends Component {\n    state = { \n        newVenue: false, \n        venue_id: '', \n        event_name: '',\n        year_established: null,\n        start_date: '',\n        end_date: '',\n        event_image_url: 'https://unsplash.com/photos/icyZmdkCGZ0/download?force=true&w=1920',\n        event_website: null,\n        event_status: 'false',\n        event_type: '',\n        estimated_attendance: '',\n        event_notes: null,\n        contact_name: null,\n        contact_title: null,\n        contact_email: null,\n        contact_phone: null,\n        event_facebook: null,\n        event_instagram: null,\n        event_twitter: null,\n        event_description: null, \n        event_sponsorship_kit: null,\n        event_open: false, // Dropdowns\n        venue_open: false, // Dropdowns \n        state_open: false, // Dropdowns\n        venue_name: null,\n        venue_address: null,\n        venue_city: null,\n        venue_state: '',\n        venue_zipcode: null,\n        venue_notes: null,\n        venue_capacity: null,   \n    }\n\n    cancelSelect = (event) => {\n        this.setState({ event_status: event.target.value });\n    };\n\n    componentDidMount = () => {\n        document.title = \"Sponsorship Hub - Create Event\"; // Sets browser's title\n        console.log('componentDidMount: FETCH_VENUES');\n        this.props.dispatch({ type: 'FETCH_VENUES' }); /* Gets all the venues */\n        this.props.dispatch({ type: 'FETCH_EVENT_TYPES' });// get our event types\n    }\n\n    handleChange = (event, property) => {\n        this.setState({ ...this.state, [property]: event.target.value})\n        console.log(this.state)\n    }\n\n    nextClick = () => {\n        if (this.state.event_name === '') { alert('Please enter an Event Name'); return }\n        else if (this.state.start_date === '') { alert('Please enter a Start Date'); return }\n        else if (this.state.end_date === '') { alert('Please enter an End Date'); return }\n        else if (this.state.venue_id === '') { alert('Please choose a Venue'); return; }\n        else if (this.state.estimated_attendance === '') { alert('Please enter Estimated Attendance'); return; }\n            // DISPATCH AND SETS REDUCER CURRENT_EVENT to NEW ID\n            this.props.dispatch({ type: 'POST_EVENT', payload: this.state, history: this.props.history })\n            console.log('Receiving event ID of:', this.props.currentEvent) // Shows undefined\n            // PUSHES TO the NEW ID\n            // this.props.history.push(`/create-sponsor/${this.props.currentEvent.id}`)\n    }\n\n    venueSelect(event) {\n        console.log(event.target.value)\n        // this.setState({ venue: event.target.value })\n    }\n\n    // SELECTOR EVENT TYPE START\n    eventOpen = () => {\n        this.setState({\n            event_open: true\n        })\n    }\n    eventClose = () => {\n        this.setState({\n            event_open: false\n        })\n    }\n    eventSelector = (event) => {\n        console.log('You have set the event type to:', event.target.value);\n        this.setState({\n            event_type: event.target.value\n        })\n    }  // SELECTOR EVENT TYPE END\n\n    // SELECTOR EVENT TYPE START\n    venueOpen = () => {\n        this.setState({\n            venue_open: true\n        })\n    }\n    venueClose = () => {\n        this.setState({\n            venue_open: false\n        })\n    }\n    venueSelector = (event) => {\n        console.log('You have set the event type to:', event.target.value);\n        if (event.target.value == 0) {\n            this.setState({\n                newVenue: true,\n                venue_id: event.target.value\n            })}\n        else {this.setState({\n            newVenue: false,\n            venue_id: event.target.value\n        })}\n    }  // SELECTOR EVENT TYPE END\n\n    // SELECTOR EVENT TYPE START\n    stateOpen = () => {\n        this.setState({\n            state_open: true\n        })\n    }\n    stateClose = () => {\n        this.setState({\n            state_open: false\n        })\n    }\n    stateSelector = (event) => {\n        console.log('You have set the state to:', event.target.value);\n            this.setState({\n                venue_state: event.target.value\n            })\n    }  // SELECTOR EVENT TYPE END\n\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        let cancelValue = String(this.state.event_status);\n\n        return (\n            <>\n            <Header_small />\n            <Box className={classes.header_margin_small} />\n            \n                <Box className={classes.margin}>\n                    <Grid justify=\"center\" container>\n                        <Grid item xs={12} md={4}><h1>Create Event</h1></Grid>\n                        <Grid item xs={12} md={4}></Grid>\n                    </Grid>\n                    \n                    {/* SECTION - FIRST */}\n                    {/* Row Start */}\n                    <Box mb={2}>\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                                <TextField fullWidth={true} inputProps={{ maxLength: 255 }} label={<><span>Event Name</span> <span className={classes.red}>*</span></>} placeholder=\"Name of the Event\" onChange={(event)=>this.handleChange(event, 'event_name')}/>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                                <TextField inputProps={{ min: 1800, max: 2200 }} type=\"number\" label=\"Year Established\" placeholder=\"#\" fullWidth={true} onChange={(event) => this.handleChange(event, 'year_established')}/>\n                        </Grid>\n                    </Grid>\n                    </Box>\n\n                    {/* Row Start */}\n                    <Box mb={2}>\n                    <Grid container spacing={2} item md={12}>\n                        <Grid item md={2}></Grid>\n                        <Grid item xs={12} md={4}>\n                                <InputLabel>Start Date <span className={classes.red}>*</span></InputLabel>\n                                <TextField type=\"date\" placeholder=\"Start Date\" onChange={(event) => this.handleChange(event, 'start_date')}/>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                                <InputLabel>End Date <span className={classes.red}>*</span></InputLabel>\n                                    <TextField type=\"date\" placeholder=\"End Date\" onChange={(event) => this.handleChange(event, 'end_date')}/>\n                        </Grid>\n                        <Grid item md={2}></Grid>\n                    </Grid>\n                    </Box>\n\n                    {/* Row Start */}\n                    <Grid container spacing={2} item md={12}>\n                        <Grid item md={2}></Grid>\n                        <Grid item xs={12} md={4}>\n                            <InputLabel>Venue <span className={classes.red}>*</span></InputLabel>\n                            <FormControl>\n                                <Select\n                                    open={this.state.venue_open}\n                                    onClose={this.venueClose}\n                                    onOpen={this.venueOpen}\n                                    value={this.state.venue_id}\n                                    onChange={(event) => this.venueSelector(event)}>\n                                        {this.props.venues.map(venue =>\n                                            <MenuItem key={venue.id} value={venue.id}>{venue.name}</MenuItem>\n                                        )}\n                                    <MenuItem value={0}>Other - Create New</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <InputLabel>Event Type</InputLabel>\n                            <FormControl>\n                                <Select\n                                    open={this.state.event_open}\n                                    onClose={this.eventClose}\n                                    onOpen={this.eventOpen}\n                                    value={this.state.event_type}\n                                    onChange={(event) => this.eventSelector(event)}>\n                                    <MenuItem value={1}>Art Festival</MenuItem>\n                                    <MenuItem value={2}>Auto Show</MenuItem>\n                                    <MenuItem value={3}>Beer Festival</MenuItem>\n                                    <MenuItem value={4}>City Show</MenuItem>\n                                    <MenuItem value={5}>Cultural Festival</MenuItem>\n                                    <MenuItem value={6}>Film Show</MenuItem>\n                                    <MenuItem value={7}>Food & Wine Festival</MenuItem>\n                                    <MenuItem value={8}>Motorcycle Rally</MenuItem>\n                                    <MenuItem value={9}>Music Festival</MenuItem>\n                                    <MenuItem value={10}>Street Market Festival</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item md={2}></Grid>\n                    </Grid>\n                </Box>\n\n                {/* SECTION - VENUE */}\n                {/* Show Only if newVenue=true */}\n                {this.state.newVenue && \n                <Box className={classes.box_grey}>\n                <Box className={classes.margin}>\n                        <Grid justify=\"center\" container>\n                            <Grid item xs={12} md={4}><h2>New Venue</h2></Grid>\n                            <Grid item xs={12} md={4}></Grid>  \n                        </Grid>\n\n                        {/* Row Start */}\n                        <Grid justify=\"center\" container spacing={4}>\n                            <Grid item xs={12} md={6}>\n                                <TextField fullWidth={true} inputProps={{ maxLength: 255 }} label={<><span>Venue Name</span> <span className={classes.red}>*</span></>} placeholder=\"Name\" onChange={(event) => this.handleChange(event, 'venue_name')}/>\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <TextField fullWidth={true} type=\"number\" label=\"Capacity\" placeholder=\"#\" onChange={(event) => this.handleChange(event, 'venue_capacity')}/>\n                            </Grid>\n                        </Grid>\n\n                        {/* Row Start */}\n                        <Grid justify=\"center\" container spacing={4}>\n                            <Grid item xs={12} md={8}>\n                                <TextField fullWidth={true} multiline={true} label={<><span>Street Address</span> <span className={classes.red}>*</span></>} placeholder=\"Notes about the Venue\" onChange={(event) => this.handleChange(event, 'venue_address')}/>\n                            </Grid>\n                        </Grid>\n\n                        {/* Row Start */}\n                        <Grid justify=\"center\" container spacing={4}>\n                            <Grid item xs={12} md={4}>\n                                <TextField fullWidth={true} inputProps={{ maxLength: 255 }} label={<><span>City</span> <span className={classes.red}>*</span></>} placeholder=\"City\" onChange={(event) => this.handleChange(event, 'venue_city')}/>\n                            </Grid>\n                            <Grid item xs={9} md={2}>\n                                <InputLabel>State <span className={classes.red}>*</span></InputLabel>\n\n                                <FormControl>\n                                    <Select\n                                        open={this.state.state_open}\n                                        onClose={this.stateClose}\n                                        onOpen={this.stateOpen}\n                                        value={this.state.venue_state}\n                                        onChange={(event) => this.stateSelector(event)}>\n                                        <MenuItem value='Alabama'>Alabama</MenuItem>\n                                        <MenuItem value='Alaska'>Alaska</MenuItem>\n                                        <MenuItem value='Arizona'>Arizona</MenuItem>\n                                        <MenuItem value='Arkansas'>Arkansas</MenuItem>\n                                        <MenuItem value='California'>California</MenuItem>\n                                        <MenuItem value='Colorado'>Colorado</MenuItem>\n                                        <MenuItem value='Connecticut'>Connecticut</MenuItem>\n                                        <MenuItem value='Delaware'>Delaware</MenuItem>\n                                        <MenuItem value='Florida'>Florida</MenuItem>\n                                        <MenuItem value='Georgia'>Georgia</MenuItem>\n                                        <MenuItem value='Hawaii'>Hawaii</MenuItem>\n                                        <MenuItem value='Idaho'>Idaho</MenuItem>\n                                        <MenuItem value='Illinois'>Illinois</MenuItem>\n                                        <MenuItem value='Indiana'>Indiana</MenuItem>\n                                        <MenuItem value='Iowa'>Iowa</MenuItem>\n                                        <MenuItem value='Kansas'>Kansas</MenuItem>\n                                        <MenuItem value='Kentucky'>Kentucky</MenuItem>\n                                        <MenuItem value='Louisiana'>Louisiana</MenuItem>\n                                        <MenuItem value='Maine'>Maine</MenuItem>\n                                        <MenuItem value='Maryland'>Maryland</MenuItem>\n                                        <MenuItem value='Massachusetts'>Massachusetts</MenuItem>\n                                        <MenuItem value='Michigan'>Michigan</MenuItem>\n                                        <MenuItem value='Minnesota'>Minnesota</MenuItem>\n                                        <MenuItem value='Mississippi'>Mississippi</MenuItem>\n                                        <MenuItem value='Missouri'>Missouri</MenuItem>\n                                        <MenuItem value='Montana'>Montana</MenuItem>\n                                        <MenuItem value='Nebraska'>Nebraska</MenuItem>\n                                        <MenuItem value='Nevada'>Nevada</MenuItem>\n                                        <MenuItem value='New Hampshire'>New Hampshire</MenuItem>\n                                        <MenuItem value='New Jersey'>New Jersey</MenuItem>\n                                        <MenuItem value='New Mexico'>New Mexico</MenuItem>\n                                        <MenuItem value='New York'>New York</MenuItem>\n                                        <MenuItem value='North Carolina'>North Carolina</MenuItem>\n                                        <MenuItem value='North Dakota'>North Dakota</MenuItem>\n                                        <MenuItem value='Ohio'> Ohio </MenuItem>\n                                        <MenuItem value='Oklohoma'> Oklohoma </MenuItem>\n                                        <MenuItem value='Oregon'> Oregon </MenuItem>\n                                        <MenuItem value='Pennsylvania'> Pennsylvania </MenuItem>\n                                        <MenuItem value='Rhode Island'> Rhode Island </MenuItem>\n                                        <MenuItem value='South Carolina'> South Carolina </MenuItem>\n                                        <MenuItem value='South Dakota'> South Dakota </MenuItem>\n                                        <MenuItem value='Tennessee'> Tennessee </MenuItem>\n                                        <MenuItem value='Texas'> Texas </MenuItem>\n                                        <MenuItem value='Utah'> Utah </MenuItem>\n                                        <MenuItem value='Vermont'> Vermont </MenuItem>\n                                        <MenuItem value='Virginia'> Virginia </MenuItem>\n                                        <MenuItem value='Washington'> Washington </MenuItem>\n                                        <MenuItem value='West Virginia'> West Virginia </MenuItem>\n                                        <MenuItem value='Wisconsin'> Wisconsin </MenuItem>\n                                        <MenuItem value='Wyoming'> Wyoming </MenuItem>\n                                    </Select>\n                                </FormControl>\n\n                            </Grid>\n                            <Grid item xs={3} md={2}>\n                                <TextField fullWidth={true} type=\"number\" label=\"Zip Code\" placeholder=\"#\" onChange={(event) => this.handleChange(event, 'venue_zipcode')}/>\n                            </Grid>\n                        </Grid>\n\n                        {/* Row Start */}\n                        <Grid justify=\"center\" container spacing={4}>\n                            <Grid item xs={12} md={8}>\n                                <TextField variant=\"outlined\" fullWidth={true} multiline={true} label=\"Notes\" placeholder=\"Notes about the Venue\" onChange={(event) => this.handleChange(event, 'venue_notes')}/>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n                }\n\n                {/* SECTION - WEBSITE - IMAGE - CANCELLED */}\n                {/* Row Start */}\n                <Box className={classes.margin}>\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={8}>\n                            <TextField multiline={true} label=\"Website\" placeholder=\"URL\" fullWidth={true} onChange={(event) => this.handleChange(event, 'event_website')} />\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <TextField multiline={true} label=\"Event Image\" placeholder=\"URL\" fullWidth={true} onChange={(event) => this.handleChange(event, 'event_image_url')}/>\n                        </Grid>\n                    </Grid>\n\n                    \n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={2}>\n                            <InputLabel>Cancelled?</InputLabel>\n                            <Radio\n                                color=\"primary\"\n                                checked={cancelValue === 'true'}\n                                onChange={this.cancelSelect}\n                                value='true'\n                                name=\"radio-button-demo\"\n                                inputProps={{ 'aria-label': 'TRUE' }}\n                            />Yes\n                            <Radio\n                                color=\"primary\"\n                                checked={cancelValue === 'false'}\n                                onChange={this.cancelSelect}\n                                value='false'\n                                name=\"radio-button-demo\"\n                                inputProps={{ 'aria-label': 'FALSE' }}\n                            />No\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField type=\"number\" label={<><span>Estimated Attendance</span> <span className={classes.red}>*</span></>} placeholder=\"#\" fullWidth={true} onChange={(event) => this.handleChange(event, 'estimated_attendance')}/>\n                        </Grid>\n                    </Grid>\n\n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={4}>\n                        <Grid item xs={12} md={8}>\n                            <TextField variant=\"outlined\" fullWidth={true} multiline={true} label=\"Event Description\" placeholder=\"A short description of the event\" onChange={(event) => this.handleChange(event, 'event_description')}/>\n                        </Grid>\n                    </Grid></Box>\n\n                {/* SECTION - CONTACT INFO */}\n                <Box className={classes.box_grey}><Box className={classes.margin}>\n                    \n                    <Grid justify=\"center\" container>\n                        <Grid item xs={12} md={4}><h2>Event Contact Information</h2></Grid>\n                        <Grid item xs={12} md={4}></Grid>\n                    </Grid>\n\n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField fullWidth={true} inputProps={{ maxLength: 255 }} label=\"Contact Name\" placeholder=\"Name of Event Contact\" onChange={(event) => this.handleChange(event, 'contact_name')}/>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField fullWidth={true} inputProps={{ maxLength: 255 }} label=\"Title\" placeholder=\"Title or Occupation\" onChange={(event) => this.handleChange(event, 'contact_title')}/>\n                        </Grid>\n                    </Grid>\n\n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField fullWidth={true} inputProps={{ maxLength: 255 }} label=\"Email Address\" placeholder=\"Email Address\" onChange={(event) => this.handleChange(event, 'contact_email')}/>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField fullWidth={true} label=\"Phone Number\" placeholder=\"#\" onChange={(event) => this.handleChange(event, 'contact_phone')}/>\n                        </Grid>\n                    </Grid></Box>\n                </Box>\n\n                {/* SECTION - SOCIAL TAGS */}\n                <Box className={classes.margin}>\n                    <Grid justify=\"center\" container>\n                        <Grid item xs={12} md={4}><h2>Social Tags</h2></Grid>\n                        <Grid item xs={12} md={4}></Grid>\n                    </Grid>\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={8}>\n                            <TextField multiline={true} fullWidth={true} InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">https://www.facebook.com/</InputAdornment>,\n                            }} label={<><FacebookIcon /><span> Facebook</span></>} placeholder=\"social-tag\" onChange={(event) => this.handleChange(event, 'event_facebook')}/>\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <TextField multiline={true} fullWidth={true} InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">https://www.instagram.com/</InputAdornment>,\n                            }} label={<><InstagramIcon /><span> Instagram</span></>} placeholder=\"social-tag\" onChange={(event) => this.handleChange(event, 'event_instagram')}/>\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <TextField multiline={true} fullWidth={true} InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">https://www.twitter.com/</InputAdornment>,\n                            }} label={<><TwitterIcon /><span> Twitter</span></>} placeholder=\"social-tag\" onChange={(event) => this.handleChange(event, 'event_twitter')}/>\n                        </Grid>\n                    </Grid>\n                </Box>\n\n                {/* SECTION - SPONSOR KIT - NOTES */}\n                <Box className={classes.box_grey}><Box className={classes.margin}>\n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={8}>\n                            <TextField fullWidth={true} label=\"Sponsorship Kit\" placeholder=\"URL\" onChange={(event) => this.handleChange(event, 'event_sponsorship_kit')}/>\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <TextField variant=\"outlined\" fullWidth={true} multiline={true} label=\"Additional Notes\" placeholder=\"Further notes on the event\" onChange={(event) => this.handleChange(event, 'event_notes')}/>\n                        </Grid>\n                    </Grid></Box>\n                </Box>\n\n                <Grid justify=\"center\" container>\n                    <Grid item xs={12} md={3}></Grid>\n                    <Grid item xs={12} md={3}><Button fullWidth={true} variant=\"outlined\" className={classes.btn_def} onClick={this.nextClick}>Next</Button></Grid>\n                    <Grid item xs={12} md={3}>\n                    </Grid>\n                </Grid>\n                \n            </>\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nCreateEvent.propTypes = { classes: PropTypes.object.isRequired };\n\n// Destructures reduxState to pull venues only.\nconst putStateOnProps = reduxState => ({\n    venues: reduxState.venues,\n    currentEvent: reduxState.currentEvent\n});\n\nexport default connect(putStateOnProps)(withStyles(styles)(CreateEvent));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\n\nclass CreateDemo extends Component {\n\n    state = {\n        id: this.props.match.params.id,\n        //the id needs to come over from the origin page to identify the event\n        gender1: 0,\n        female: 0,\n        gender2: 0,\n        male: 0,\n        gender3: 0,\n        other: 0,\n        income1: 0,\n        income2: 0,\n        income3: 0,\n        income4: 0,\n        income5: 0,\n        income6: 0,\n        income7: 0,\n        age1: 0,\n        age2: 0,\n        age3: 0,\n        age4: 0,\n        age5: 0,\n        age6: 0,\n        age7: 0,\n        resident1: 0,\n        resident2: 0,\n    }\n\n    backClick = () => {\n        this.props.history.push(`/create-sponsor/${this.props.match.params.id}`)\n    }\n\n    forwardClick = () => {\n        this.props.history.push('/home')\n    }\n\n    handleChange = (event, property) => {\n        this.setState({\n            ...this.state,\n            [property]: Number(event.target.value),\n        }); \n    }\n\n    handleSubmit = () => {\n        if (this.state.gender1 + this.state.gender2 + this.state.gender3 === 100 &&\n            this.state.income1 + this.state.income2 + this.state.income3 + this.state.income4 + this.state.income5 + this.state.income6 + this.state.income7 === 100 &&\n            this.state.age1 + this.state.age2 + this.state.age3 + this.state.age4 + this.state.age5 + this.state.age6 + this.state.age7 === 100 &&\n            this.state.resident1 + this.state.resident2 === 100\n        ){\n            console.log(\"ALL 100\");\n            this.props.dispatch({ type: 'ADD_DEMO', payload:this.state, history:this.props.history })\n            // this.props.history.push(`/event/${this.props.match.params.id}`)\n            //this push is happening too fast, only some information is ready to render and a refresh is necessary\n        } else {\n            console.log('not ALL 100');\n            \n        }\n      \n        // this will need to be also send the user to the created events page on a succesful post\n    }\n\n\n    render() {\n        let genderPercent = this.state.gender1 + this.state.gender2 + this.state.gender3;\n        let incomePercent = this.state.income1 + this.state.income2 + this.state.income3 + this.state.income4 + this.state.income5 + this.state.income6 + this.state.income7;\n        let agePercent = this.state.age1 + this.state.age2 + this.state.age3 + this.state.age4 + this.state.age5 + this.state.age6 + this.state.age7;\n        let residentPercent = this.state.resident1 + this.state.resident2;\n        \n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        return (\n\n            <Box>\n                <Typography align=\"center\" variant=\"h2\">Enter Demographics</Typography>\n                {/* Begin Gender Demographic Inputs */}\n                <Box className={classes.box_grey}>\n                    <Grid container justify=\"center\" spacing={3}>\n                        <Grid item md={9} sm={12}>\n                            <Typography align=\"center\" variant=\"h3\">Gender</Typography>\n                        </Grid>\n                        <Grid align=\"center\" item container md={8}>\n                            {/* {this.props.oneEvent.gender.map(gender => \n                                <Grid item md={3} sm={12}>\n                                    <TextField label={gender.gender} type=\"number\" placeholder=\"%\" defaultValue={gender.gender_percentage} onChange={(event) => this.handleChange(event, 'gender.gender')}></TextField>\n                                </Grid>\n                                )}; */}\n\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"Female\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'gender1')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"Male\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'gender2')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"Other\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'gender3')}></TextField>\n                            </Grid>\n                            <Grid item md={2} sm={12}>\n                                <Typography className={genderPercent === 100 ? classes.goodPercent : classes.badPercent }>Total: {genderPercent}%</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Box>\n                {/* End Gender Demographic Inputs */}\n                {/* Begin Household Income Inputs */}\n                <Box>\n                    <Grid container justify=\"center\" spacing={3}>\n                        <Grid item md={9} sm={12}>\n                            <Typography align=\"center\" variant=\"h3\">Household Income</Typography>\n                        </Grid>\n                        <Grid align=\"center\" item container md={8}>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"Less than $25,000\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'income1')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"$25,000-49,000\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'income2')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"$50,000-75,999\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'income3')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"$76,000-99,999\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'income4')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"$100,000-149,999\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'income5')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"$150,000-200,000\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'income6')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"$200,001 or Greater\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'income7')}></TextField>\n                            </Grid>\n                            <Grid item md={2} sm={12}>\n                                <Typography className={incomePercent === 100 ? classes.goodPercent : classes.badPercent}>Total: {incomePercent}%</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Box>\n                {/* End Household Income Inputs*/}\n                {/* Begin Age Inputs */}\n                <Box className={classes.box_grey}>\n                    <Grid container justify=\"center\" spacing={3}>\n                        <Grid item md={9} sm={12}>\n                            <Typography align=\"center\" variant=\"h3\">Age Range</Typography>\n                        </Grid>\n                        <Grid align=\"center\" item container md={8}>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"17 and Under\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'age1')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"18-24\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'age2')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"25-34\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'age3')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"35-44\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'age4')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"45-54\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'age5')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"55-64\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'age6')}></TextField>\n                            </Grid>\n                            <Grid item md={3} sm={12}>\n                                <TextField label=\"65 or Greater\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'age7')}></TextField>\n                            </Grid>\n                            <Grid item md={2} sm={12}>\n                                <Typography className={agePercent === 100 ? classes.goodPercent : classes.badPercent}>Total: {agePercent}%</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Box>\n                {/* End Age Inputs */}\n                {/* Begin Residency Inputs */}\n                <Box spacing={3}>\n                    <Grid container justify=\"center\" spacing={3}>\n                        <Grid item md={9} sm={12}>\n                            <Typography align=\"center\" variant=\"h3\">Residency</Typography>\n                        </Grid>\n                        <Grid align=\"center\" item container md={8}>\n                            <Grid item md={5} sm={12}>\n                                <TextField label=\"Resident\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'resident1')}></TextField>\n                            </Grid>\n                            <Grid item md={5} sm={12}>\n                                <TextField label=\"Non-Resident\" type=\"number\" placeholder=\"%\" onChange={(event) => this.handleChange(event, 'resident2')}></TextField>\n                            </Grid>\n                            <Grid item md={1} sm={12}>\n                                <Typography className={residentPercent === 100 ? classes.goodPercent : classes.badPercent}>Total: {residentPercent}%</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Box>\n                {/* End Residency Inputs*/}\n                <Box mx={10} spacing={3}>\n                    <Grid justify=\"center\" container>\n                        <Grid item md={3} sm={6}>\n                            <Button fullWidth className={classes.btn_def} variant=\"outlined\" onClick={this.backClick}>Back</Button>\n                        </Grid>\n                        <Grid item md={3}></Grid>\n                        <Grid item md={3} sm={6}>\n                            <Button fullWidth className={classes.btn_def} variant=\"outlined\" onClick={this.handleSubmit}>Submit</Button>\n                        </Grid>\n                    </Grid>\n\n                </Box>\n            </Box>\n\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nCreateDemo.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = state => ({\n    oneEvent: state.oneEvent,\n\n});\n\n// const putStateOnProps = reduxState => ({reduxState});\nexport default connect()(withStyles(styles)(CreateDemo));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material UI Imports\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormControl, InputAdornment, Radio, TextField, InputLabel, Select, MenuItem, Grid, Paper, Typography, Input, Box, Button } from '@material-ui/core';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\nconst moment = require('moment');\n\nclass CreateEvent extends Component {\n    state = {\n        newVenue: false,\n        venue_id: '',\n        event_name: 'Test',\n        year_established: null,\n        start_date: '',\n        end_date: '',\n        event_image_url: null,\n        event_website: 'https://unsplash.com/photos/icyZmdkCGZ0/download?force=true&w=1920',\n        event_status: 'false',\n        event_type: '',\n        estimated_attendance: '',\n        event_notes: null,\n        contact_name: null,\n        contact_title: null,\n        contact_email: null,\n        contact_phone: null,\n        event_facebook: null,\n        event_instagram: null,\n        event_twitter: null,\n        event_description: null,\n        event_sponsorship_kit: null,\n        event_open: false, // Dropdowns\n        venue_open: false, // Dropdowns \n        state_open: false, // Dropdowns\n        venue_name: null,\n        venue_address: null,\n        venue_city: null,\n        venue_state: '',\n        venue_zipcode: null,\n        venue_notes: null,\n        venue_capacity: null,\n    }\n\n    cancelSelect = (event) => {\n        this.setState({ event_status: event.target.value });\n    };\n\n    componentDidMount = () => {\n        document.title = \"Sponsorship Hub - Edit Event\"; // Sets browser's title\n        this.props.dispatch({ type: 'FETCH_EVENT_TYPES' });\n        this.props.dispatch({ type: \"FETCH_ONE_EVENT\", payload: this.props.match.params.id }); /* Gets one event */\n        this.props.dispatch({ type: 'FETCH_VENUES' }); /* Gets all the venues */\n        this.setState({ \n            newVenue: false,\n            venue_id: this.props.oneEvent.venue_id,\n            event_name: this.props.oneEvent.event_name,\n            year_established: this.props.oneEvent.year_established,\n            start_date: this.props.oneEvent.start_date,\n            end_date: this.props.oneEvent.end_date,\n            event_image_url: this.props.oneEvent.event_image_url,\n            event_website: this.props.oneEvent.event_website,\n            event_status: String(this.props.oneEvent.event_status),\n            event_type: this.props.oneEvent.type_id,\n            estimated_attendance: this.props.oneEvent.estimated_attendance,\n            event_notes: this.props.oneEvent.event_notes,\n            contact_name: this.props.oneEvent.contact_name,\n            contact_title: this.props.oneEvent.contact_title,\n            contact_email: this.props.oneEvent.contact_email,\n            contact_phone: this.props.oneEvent.contact_phone,\n            event_facebook: this.props.oneEvent.event_facebook,\n            event_instagram: this.props.oneEvent.event_instagram,\n            event_twitter: this.props.oneEvent.event_twitter,\n            event_description: this.props.oneEvent.event_description,\n            event_sponsorship_kit: this.props.oneEvent.event_sponsorship_kit,\n        });\n    }\n\n    handleChange = (event, property) => {\n        this.setState({ ...this.state, [property]: event.target.value })\n        console.log(this.state)\n    }\n\n    nextClick = () => {\n        if (this.state.event_name === '') { alert('Please enter an Event Name'); return }\n        else if (this.state.start_date === '') { alert('Please enter a Start Date'); return }\n        else if (this.state.end_date === '') { alert('Please enter an End Date'); return }\n        else if (this.state.venue_id === '') { alert('Please choose a Venue'); return; }\n        else if (this.state.estimated_attendance === '') { alert('Please enter Estimated Attendance'); return; }\n        // DISPATCH AND SETS REDUCER CURRENT_EVENT to NEW ID\n        this.props.dispatch({ type: 'UPDATE_EVENT', payload: this.state, history: this.props.history })\n        console.log('Receiving event ID of:', this.props.currentEvent) // Shows undefined\n        // PUSHES TO the NEW ID\n        this.props.history.push(`/create-sponsor/${this.props.match.params.id}`)\n    }\n\n    venueSelect(event) {\n        console.log(event.target.value)\n        // this.setState({ venue: event.target.value })\n    }\n\n    // SELECTOR EVENT TYPE START\n    eventOpen = () => {\n        this.setState({\n            event_open: true\n        })\n    }\n    eventClose = () => {\n        this.setState({\n            event_open: false\n        })\n    }\n    eventSelector = (event) => {\n        console.log('You have set the event type to:', event.target.value);\n        this.setState({\n            event_type: event.target.value,\n        })\n    }  // SELECTOR EVENT TYPE END\n\n    // SELECTOR EVENT TYPE START\n    venueOpen = () => {\n        this.setState({\n            venue_open: true\n        })\n    }\n    venueClose = () => {\n        this.setState({\n            venue_open: false\n        })\n    }\n    venueSelector = (event) => {\n        console.log('You have set the event type to:', event.target.value);\n        if (event.target.value == 0) {\n            this.setState({\n                newVenue: true,\n                venue_id: event.target.value\n            })\n        }\n        else {\n            this.setState({\n                newVenue: false,\n                venue_id: event.target.value\n            })\n        }\n    }  // SELECTOR EVENT TYPE END\n\n    // SELECTOR EVENT TYPE START\n    stateOpen = () => {\n        this.setState({\n            state_open: true\n        })\n    }\n    stateClose = () => {\n        this.setState({\n            state_open: false\n        })\n    }\n    stateSelector = (event) => {\n        console.log('You have set the state to:', event.target.value);\n        this.setState({\n            venue_state: event.target.value\n        })\n    }  // SELECTOR EVENT TYPE END\n\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        let cancelValue = String(this.state.event_status);\n        let start_date = moment(this.state.start_date).format(`YYYY-MM-DD`);\n        let end_date = moment(this.state.end_date).format(`YYYY-MM-DD`);\n        console.log('DATES ARE:', start_date, end_date)\n        return (\n            <>\n                <Box className={classes.margin}>\n                    <Grid justify=\"center\" container>\n                        <Grid item xs={12} md={4}><h1>Editing {this.props.oneEvent.event_name}</h1></Grid>\n                        <Grid item xs={12} md={4}></Grid>\n                    </Grid>\n\n                    {/* SECTION - FIRST */}\n                    {/* Row Start */}\n                    <Box mb={2}>\n                        <Grid justify=\"center\" container spacing={2}>\n                            <Grid item xs={12} md={4}>\n                                <TextField value={this.state.event_name} fullWidth={true} inputProps={{ maxLength: 255 }} label={<><span>Event Name</span> <span className={classes.red}>*</span></>} placeholder=\"Name of the Event\" onChange={(event) => this.handleChange(event, 'event_name')} />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                                <TextField value={this.state.year_established} inputProps={{ min: 1800, max: 2200 }} type=\"number\" label=\"Year Established\" placeholder=\"#\" fullWidth={true} onChange={(event) => this.handleChange(event, 'year_established')} />\n                            </Grid>\n                        </Grid>\n                    </Box>\n\n                    {/* Row Start */}\n                    <Box mb={2}>\n                        <Grid container spacing={2} item md={12}>\n                            <Grid item md={2}></Grid>\n                            <Grid item xs={12} md={4}>\n                                <InputLabel>Start Date <span className={classes.red}>*</span></InputLabel>\n                                <TextField value={start_date} type=\"date\" placeholder=\"Start Date\" onChange={(event) => this.handleChange(event, 'start_date')} />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                                <InputLabel>End Date <span className={classes.red}>*</span></InputLabel>\n                                <TextField value={end_date} type=\"date\" placeholder=\"End Date\" onChange={(event) => this.handleChange(event, 'end_date')} />\n                            </Grid>\n                            <Grid item md={2}></Grid>\n                        </Grid>\n                    </Box>\n\n                    {/* Row Start */}\n                    <Grid container spacing={2} item md={12}>\n                        <Grid item md={2}></Grid>\n                        <Grid item xs={12} md={4}>\n                            <InputLabel>Venue <span className={classes.red}>*</span></InputLabel>\n                            <FormControl>\n                                <Select\n                                    open={this.state.venue_open}\n                                    onClose={this.venueClose}\n                                    onOpen={this.venueOpen}\n                                    value={this.state.venue_id}\n                                    onChange={(event) => this.venueSelector(event)}>\n                                    {this.props.venues.map(venue =>\n                                        <MenuItem key={venue.id} value={venue.id}>{venue.name}</MenuItem>\n                                    )}\n                                    <MenuItem value={0}>Other - Create New</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <InputLabel>Event Type</InputLabel>\n                            <FormControl>\n                                <Select\n                                    open={this.state.event_open}\n                                    onClose={this.eventClose}\n                                    onOpen={this.eventOpen}\n                                    value={this.state.event_id}\n                                    onChange={(event) => this.eventSelector(event)}>\n                                    {this.props.types.map(types =>\n                                        <MenuItem key={types.id} value={types.id}>{types.type}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item md={2}></Grid>\n                    </Grid>\n                </Box>\n\n                {/* SECTION - VENUE */}\n                {/* Show Only if newVenue=true */}\n                {this.state.newVenue &&\n                    <Box className={classes.box_grey}>\n                        <Box className={classes.margin}>\n                            <Grid justify=\"center\" container>\n                                <Grid item xs={12} md={4}><h2>New Venue</h2></Grid>\n                                <Grid item xs={12} md={4}></Grid>\n                            </Grid>\n\n                            {/* Row Start */}\n                            <Grid justify=\"center\" container spacing={4}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField fullWidth={true} inputProps={{ maxLength: 255 }} label={<><span>Venue Name</span> <span className={classes.red}>*</span></>} placeholder=\"Name\" onChange={(event) => this.handleChange(event, 'venue_name')} />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField fullWidth={true} type=\"number\" label=\"Capacity\" placeholder=\"#\" onChange={(event) => this.handleChange(event, 'venue_capacity')} />\n                                </Grid>\n                            </Grid>\n\n                            {/* Row Start */}\n                            <Grid justify=\"center\" container spacing={4}>\n                                <Grid item xs={12} md={8}>\n                                    <TextField fullWidth={true} multiline={true} label={<><span>Street Address</span> <span className={classes.red}>*</span></>} placeholder=\"Notes about the Venue\" onChange={(event) => this.handleChange(event, 'venue_address')} />\n                                </Grid>\n                            </Grid>\n\n                            {/* Row Start */}\n                            <Grid justify=\"center\" container spacing={4}>\n                                <Grid item xs={12} md={4}>\n                                    <TextField fullWidth={true} inputProps={{ maxLength: 255 }} label={<><span>City</span> <span className={classes.red}>*</span></>} placeholder=\"City\" onChange={(event) => this.handleChange(event, 'venue_city')} />\n                                </Grid>\n                                <Grid item xs={9} md={2}>\n                                    <InputLabel>State <span className={classes.red}>*</span></InputLabel>\n\n                                    <FormControl>\n                                        <Select\n                                            open={this.state.state_open}\n                                            onClose={this.stateClose}\n                                            onOpen={this.stateOpen}\n                                            value={this.state.venue_state}\n                                            onChange={(event) => this.stateSelector(event)}>\n                                            <MenuItem value='Alabama'>Alabama</MenuItem>\n                                            <MenuItem value='Alaska'>Alaska</MenuItem>\n                                            <MenuItem value='Arizona'>Arizona</MenuItem>\n                                            <MenuItem value='Arkansas'>Arkansas</MenuItem>\n                                            <MenuItem value='California'>California</MenuItem>\n                                            <MenuItem value='Colorado'>Colorado</MenuItem>\n                                            <MenuItem value='Connecticut'>Connecticut</MenuItem>\n                                            <MenuItem value='Delaware'>Delaware</MenuItem>\n                                            <MenuItem value='Florida'>Florida</MenuItem>\n                                            <MenuItem value='Georgia'>Georgia</MenuItem>\n                                            <MenuItem value='Hawaii'>Hawaii</MenuItem>\n                                            <MenuItem value='Idaho'>Idaho</MenuItem>\n                                            <MenuItem value='Illinois'>Illinois</MenuItem>\n                                            <MenuItem value='Indiana'>Indiana</MenuItem>\n                                            <MenuItem value='Iowa'>Iowa</MenuItem>\n                                            <MenuItem value='Kansas'>Kansas</MenuItem>\n                                            <MenuItem value='Kentucky'>Kentucky</MenuItem>\n                                            <MenuItem value='Louisiana'>Louisiana</MenuItem>\n                                            <MenuItem value='Maine'>Maine</MenuItem>\n                                            <MenuItem value='Maryland'>Maryland</MenuItem>\n                                            <MenuItem value='Massachusetts'>Massachusetts</MenuItem>\n                                            <MenuItem value='Michigan'>Michigan</MenuItem>\n                                            <MenuItem value='Minnesota'>Minnesota</MenuItem>\n                                            <MenuItem value='Mississippi'>Mississippi</MenuItem>\n                                            <MenuItem value='Missouri'>Missouri</MenuItem>\n                                            <MenuItem value='Montana'>Montana</MenuItem>\n                                            <MenuItem value='Nebraska'>Nebraska</MenuItem>\n                                            <MenuItem value='Nevada'>Nevada</MenuItem>\n                                            <MenuItem value='New Hampshire'>New Hampshire</MenuItem>\n                                            <MenuItem value='New Jersey'>New Jersey</MenuItem>\n                                            <MenuItem value='New Mexico'>New Mexico</MenuItem>\n                                            <MenuItem value='New York'>New York</MenuItem>\n                                            <MenuItem value='North Carolina'>North Carolina</MenuItem>\n                                            <MenuItem value='North Dakota'>North Dakota</MenuItem>\n                                            <MenuItem value='Ohio'> Ohio </MenuItem>\n                                            <MenuItem value='Oklohoma'> Oklohoma </MenuItem>\n                                            <MenuItem value='Oregon'> Oregon </MenuItem>\n                                            <MenuItem value='Pennsylvania'> Pennsylvania </MenuItem>\n                                            <MenuItem value='Rhode Island'> Rhode Island </MenuItem>\n                                            <MenuItem value='South Carolina'> South Carolina </MenuItem>\n                                            <MenuItem value='South Dakota'> South Dakota </MenuItem>\n                                            <MenuItem value='Tennessee'> Tennessee </MenuItem>\n                                            <MenuItem value='Texas'> Texas </MenuItem>\n                                            <MenuItem value='Utah'> Utah </MenuItem>\n                                            <MenuItem value='Vermont'> Vermont </MenuItem>\n                                            <MenuItem value='Virginia'> Virginia </MenuItem>\n                                            <MenuItem value='Washington'> Washington </MenuItem>\n                                            <MenuItem value='West Virginia'> West Virginia </MenuItem>\n                                            <MenuItem value='Wisconsin'> Wisconsin </MenuItem>\n                                            <MenuItem value='Wyoming'> Wyoming </MenuItem>\n                                        </Select>\n                                    </FormControl>\n\n                                </Grid>\n                                <Grid item xs={3} md={2}>\n                                    <TextField fullWidth={true} type=\"number\" label=\"Zip Code\" placeholder=\"#\" onChange={(event) => this.handleChange(event, 'venue_zipcode')} />\n                                </Grid>\n                            </Grid>\n\n                            {/* Row Start */}\n                            <Grid justify=\"center\" container spacing={4}>\n                                <Grid item xs={12} md={8}>\n                                    <TextField variant=\"outlined\" fullWidth={true} multiline={true} label=\"Notes\" placeholder=\"Notes about the Venue\" onChange={(event) => this.handleChange(event, 'venue_notes')} />\n                                </Grid>\n                            </Grid>\n                        </Box>\n                    </Box>\n                }\n\n                {/* SECTION - WEBSITE - IMAGE - CANCELLED */}\n                {/* Row Start */}\n                <Box className={classes.margin}>\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={8}>\n                            <TextField value={this.state.event_website} multiline={true} label=\"Website\" placeholder=\"URL\" fullWidth={true} onChange={(event) => this.handleChange(event, 'event_website')} />\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <TextField value={this.state.event_image_url} multiline={true} label=\"Event Image\" placeholder=\"URL\" fullWidth={true} onChange={(event) => this.handleChange(event, 'event_image_url')} />\n                        </Grid>\n                    </Grid>\n\n\n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={2}>\n                            <InputLabel>Cancelled?</InputLabel>\n                            <Radio\n                                checked={cancelValue === 'true'}\n                                onChange={this.cancelSelect}\n                                value='true'\n                                name=\"radio-button-demo\"\n                                inputProps={{ 'aria-label': 'TRUE' }}\n                            />Yes\n                            <Radio\n                                checked={cancelValue === 'false'}\n                                onChange={this.cancelSelect}\n                                value='false'\n                                name=\"radio-button-demo\"\n                                inputProps={{ 'aria-label': 'FALSE' }}\n                            />No\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField value={this.state.estimated_attendance} type=\"number\" label={<><span>Estimated Attendance</span> <span className={classes.red}>*</span></>} placeholder=\"#\" fullWidth={true} onChange={(event) => this.handleChange(event, 'estimated_attendance')} />\n                        </Grid>\n                    </Grid>\n\n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={4}>\n                        <Grid item xs={12} md={8}>\n                            <TextField value={this.state.event_description} variant=\"outlined\" fullWidth={true} multiline={true} label=\"Event Description\" placeholder=\"A short description of the event\" onChange={(event) => this.handleChange(event, 'event_description')} />\n                        </Grid>\n                    </Grid></Box>\n\n                {/* SECTION - CONTACT INFO */}\n                <Box className={classes.box_grey}><Box className={classes.margin}>\n\n                    <Grid justify=\"center\" container>\n                        <Grid item xs={12} md={4}><h2>Event Contact Information</h2></Grid>\n                        <Grid item xs={12} md={4}></Grid>\n                    </Grid>\n\n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField value={this.state.contact_name} fullWidth={true} inputProps={{ maxLength: 255 }} label=\"Contact Name\" placeholder=\"Name of Event Contact\" onChange={(event) => this.handleChange(event, 'contact_name')} />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField value={this.state.contact_title} fullWidth={true} inputProps={{ maxLength: 255 }} label=\"Title\" placeholder=\"Title or Occupation\" onChange={(event) => this.handleChange(event, 'contact_title')} />\n                        </Grid>\n                    </Grid>\n\n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField value={this.state.contact_email} fullWidth={true} inputProps={{ maxLength: 255 }} label=\"Email Address\" placeholder=\"Email Address\" onChange={(event) => this.handleChange(event, 'contact_email')} />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField value={this.state.contact_phone} fullWidth={true} label=\"Phone Number\" placeholder=\"#\" onChange={(event) => this.handleChange(event, 'contact_phone')} />\n                        </Grid>\n                    </Grid></Box>\n                </Box>\n\n                {/* SECTION - SOCIAL TAGS */}\n                <Box className={classes.margin}>\n                    <Grid justify=\"center\" container>\n                        <Grid item xs={12} md={4}><h2>Social Tags</h2></Grid>\n                        <Grid item xs={12} md={4}></Grid>\n                    </Grid>\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={8}>\n                            <TextField value={this.state.event_facebook} multiline={true} fullWidth={true} InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">https://www.facebook.com/</InputAdornment>,\n                            }} label={<><FacebookIcon /><span> Facebook</span></>} placeholder=\"social-tag\" onChange={(event) => this.handleChange(event, 'event_facebook')} />\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <TextField value={this.state.event_instagram} multiline={true} fullWidth={true} InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">https://www.instagram.com/</InputAdornment>,\n                            }} label={<><InstagramIcon /><span> Instagram</span></>} placeholder=\"social-tag\" onChange={(event) => this.handleChange(event, 'event_instagram')} />\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <TextField value={this.state.event_twitter} multiline={true} fullWidth={true} InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">https://www.twitter.com/</InputAdornment>,\n                            }} label={<><TwitterIcon /><span> Twitter</span></>} placeholder=\"social-tag\" onChange={(event) => this.handleChange(event, 'event_twitter')} />\n                        </Grid>\n                    </Grid>\n                </Box>\n\n                {/* SECTION - SPONSOR KIT - NOTES */}\n                <Box className={classes.box_grey}><Box className={classes.margin}>\n                    {/* Row Start */}\n                    <Grid justify=\"center\" container spacing={2}>\n                        <Grid item xs={12} md={8}>\n                            <TextField value={this.state.event_sponsorship_kit} fullWidth={true} label=\"Sponsorship Kit\" placeholder=\"URL\" onChange={(event) => this.handleChange(event, 'event_sponsorship_kit')} />\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <TextField value={this.state.event_notes} variant=\"outlined\" fullWidth={true} multiline={true} label=\"Additional Notes\" placeholder=\"Further notes on the event\" onChange={(event) => this.handleChange(event, 'event_notes')} />\n                        </Grid>\n                    </Grid></Box>\n                </Box>\n\n                <Grid justify=\"center\" container>\n                    <Grid item xs={12} md={3}></Grid>\n                    <Grid item xs={12} md={3}><Button fullWidth={true} variant=\"outlined\" className={classes.btn_def} onClick={this.nextClick}>Next</Button></Grid>\n                    <Grid item xs={12} md={3}>\n                    </Grid>\n                </Grid>\n\n            </>\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nCreateEvent.propTypes = { classes: PropTypes.object.isRequired };\n\n// Destructures reduxState to pull venues only.\nconst putStateOnProps = reduxState => ({\n    venues: reduxState.venues,\n    currentEvent: reduxState.currentEvent,\n    oneEvent: reduxState.oneEvent,\n    types: reduxState.eventType\n});\n\nexport default connect(putStateOnProps)(withStyles(styles)(CreateEvent));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\n\nimport {PieChart, Pie, Sector, Cell, LabelList, Label} from 'recharts';\n\nimport '../App/App.css';\n\nclass DemoView extends Component {\n\n    state = {\n        age: [],\n        gender: [],\n        income: [],\n        residency: [],\n        COLORS: ['#F6CBCC', '#EFA1A2', '#F17A7C', '#f45255', '#D9373A', '#A01B1E', '#760E10'],\n        COLORS2: ['#C5DFFF', '#A7CEFF', '#6EA7F1', '#3F7FD2', '#296EC8', '#20549A', '#0D366C'],\n        COLORS3: ['#f45255', '#3F7FD2', '#FFAB18'],\n        COLORS4: ['#f45255', '#3F7FD2'],\n        RADIAN: Math.PI / 180\n    }\n\n    // f45255 - CORRAL\n\n\n    componentDidUpdate(prevProps){\n        if(prevProps.oneEvent.age != this.props.oneEvent.age){\n            this.setState({\n                age: this.props.oneEvent.age,\n                gender: this.props.oneEvent.gender,\n                income: this.props.oneEvent.income,\n                residency: this.props.oneEvent.residency\n            })\n        }\n    }\n\n    render() {        \n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        return (\n            <Box className='DemoBackground' my={2}>\n                <Box>\n                    <Grid container justify=\"space-evenly\">\n                        <Grid item md={10}>\n                            <h2>Attendee Demographics</h2>\n\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\">\n                        <Grid item md={10}>\n                            <Grid container>\n                                <Grid item md={6} sm={8} xs={8}>\n                    {/* ----------------- AGE ------------------- */}\n                                    <h4>Age Ranges</h4>\n                                    <PieChart width={460} height={310}>\n                                        <Pie data={this.state.age}\n                                            cx={220}\n                                            cy={150}\n                                            labelLine\n                                            \n                                            label={({\n                                                cx,\n                                                cy,\n                                                midAngle,\n                                                innerRadius,\n                                                outerRadius,\n                                                value,\n                                                index\n                                            }) => {\n                                                const RADIAN = Math.PI / 180;\n                                                // eslint-disable-next-line\n                                                const radius = 25 + innerRadius + (outerRadius - innerRadius);\n                                                // eslint-disable-next-line\n                                                const x = cx + radius * Math.cos(-midAngle * RADIAN);\n                                                // eslint-disable-next-line\n                                                const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n                                                return (\n                                                    <text\n                                                        x={x}\n                                                        y={y}\n                                                        fill=\"#000000\"\n                                                        textAnchor={x > cx ? \"start\" : \"end\"}\n                                                        dominantBaseline=\"central\"\n                                                    >\n                                                        {this.state.age[index].age_range} ({value}%)\n                                                    </text>\n                                                );\n                                            }}\n                                            outerRadius={80}\n                                            fill=\"#8884d8\"\n                                            dataKey='age_percentage'\n                                            nameKey={this.state.age.age_range}>\n                                            \n                                            {this.state.age.map((entry, i) => \n                                                <Cell key={i} fill={this.state.COLORS[i % this.state.COLORS.length]} />\n                                            )}\n                                        </Pie>\n                                    </PieChart>\n                                   \n                                </Grid>\n                                <Grid item md={6} sm={8} xs={8}>\n                   {/* ----------------- INCOME ------------------- */}\n                                    <h4>Household Income</h4>\n                                    <PieChart width={560} height={310}>\n                                        <Pie data={this.state.income}\n                                            cx={235}\n                                            cy={150}\n                                            labelLine\n                                            outerRadius={100}\n                                            label={({\n                                                cx,\n                                                cy,\n                                                midAngle,\n                                                innerRadius,\n                                                outerRadius,\n                                                value,\n                                                index\n                                            }) => {\n                                                const RADIAN = Math.PI / 180;\n                                                // eslint-disable-next-line\n                                                const radius = 25 + innerRadius + (outerRadius - innerRadius);\n                                                // eslint-disable-next-line\n                                                const x = cx + radius * Math.cos(-midAngle * RADIAN);\n                                                // eslint-disable-next-line\n                                                const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n                                                return (\n                                                    <text\n                                                        x={x}\n                                                        y={y}\n                                                        fill=\"#000000\"\n                                                        textAnchor={x > cx ? \"start\" : \"end\"}\n                                                        dominantBaseline=\"central\"\n                                                    >\n                                                        {this.state.income[index].income_range} ({value}%)\n                                                    </text>\n                                                );\n                                            }}\n                                            outerRadius={80}\n                                            fill=\"#000000\"\n                                            dataKey='income_percentage'>\n\n                                            {this.state.income.map((entry, i) =>\n                                                <Cell key={i} fill={this.state.COLORS2[i % this.state.COLORS2.length]} />\n                                            )}\n                                        </Pie>\n                                    </PieChart>\n                                </Grid>\n                                <Grid item md={6} sm={8} xs={8}>\n                    {/* ----------------- GENDER ------------------- */}\n                                    <h4>Gender</h4>\n                                    <PieChart width={460} height={350}>\n                                        <Pie data={this.state.gender}\n                                            cx={240}\n                                            cy={130}\n                                            labelLine\n                                            label={({\n                                                cx,\n                                                cy,\n                                                midAngle,\n                                                innerRadius,\n                                                outerRadius,\n                                                value,\n                                                index\n                                            }) => {\n                                                const RADIAN = Math.PI / 180;\n                                                // eslint-disable-next-line\n                                                const radius = 25 + innerRadius + (outerRadius - innerRadius);\n                                                // eslint-disable-next-line\n                                                const x = cx + radius * Math.cos(-midAngle * RADIAN);\n                                                // eslint-disable-next-line\n                                                const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n                                                return (\n                                                    <text\n                                                        x={x}\n                                                        y={y}\n                                                        fill=\"#000000\"\n                                                        textAnchor={x > cx ? \"start\" : \"end\"}\n                                                        dominantBaseline=\"central\"\n                                                    >\n                                                        {this.state.gender[index].gender} ({value}%)\n                                                    </text>\n                                                );\n                                            }}\n                                            outerRadius={80}\n                                            fill=\"#000000\"\n                                            dataKey='gender_percentage'>\n\n                                            {this.state.age.map((entry, i) =>\n                                                <Cell key={i} fill={this.state.COLORS3[i % this.state.COLORS3.length]} />\n                                            )}\n                                        </Pie>\n                                    </PieChart>\n                                </Grid>\n                                <Grid item md={6} sm={8} xs={8}>\n                   {/* ----------------- RESIDENCY ------------------- */}\n                                    <h4>Attendees Location</h4>\n                                    <PieChart width={520} height={350}>\n                                        <Pie data={this.state.residency}\n                                            cx={250}\n                                            cy={120}\n                                            labelLine\n                                            label={({\n                                                cx,\n                                                cy,\n                                                midAngle,\n                                                innerRadius,\n                                                outerRadius,\n                                                value,\n                                                index\n                                            }) => {\n                                                const RADIAN = Math.PI / 180;\n                                                // eslint-disable-next-line\n                                                const radius = 25 + innerRadius + (outerRadius - innerRadius);\n                                                // eslint-disable-next-line\n                                                const x = cx + radius * Math.cos(-midAngle * RADIAN);\n                                                // eslint-disable-next-line\n                                                const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n                                                return (\n                                                    <text\n                                                        x={x}\n                                                        y={y}\n                                                        fill=\"#000000\"\n                                                        textAnchor={x > cx ? \"start\" : \"end\"}\n                                                        dominantBaseline=\"central\"\n                                                    >\n                                                        {this.state.residency[index].residency} ({value}%)\n                                                    </text>\n                                                );\n                                            }}\n                                            outerRadius={80}\n                                            fill=\"#000000\"\n                                            dataKey='residency_percentage'>\n\n                                            {this.state.age.map((entry, i) =>\n                                                <Cell key={i} fill={this.state.COLORS4[i % this.state.COLORS4.length]} />\n                                            )}\n                                            <Label value={this.state.residency.residency} position=\"outside\" />\n                                        </Pie>\n                                    </PieChart>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nDemoView.propTypes = { classes: PropTypes.object.isRequired };\n\nconst putStateOnProps = reduxState => ({\n    oneEvent: reduxState.oneEvent\n});\n\nexport default connect(putStateOnProps)(withStyles(styles)(DemoView));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button, TableRow, TableCell, DialogTitle, Dialog } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\n\nclass SponsorshipPackage extends Component {\n\n    state = {\n        openModal: false\n    }\n\n\n    handleOpen = (id, classes) => {\n        // console.log('HERE IS OUR SPONSOR:', this.props.oneEvent.sponsorship[this.state.sponsorshipId]);\n        this.setState({\n            sponsorshipId: id\n        })\n\n        if (this.openModal) {\n            this.setState({\n                openModal: !this.state.openModal,\n            })\n        }\n        else {\n            this.setState({\n                openModal: !this.state.openModal\n            })\n        }\n    };//end handleOpen\n\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        return (\n            <Box>\n                <TableRow key={this.props.item.sponsorship_id}>\n                    <TableCell><img className={classes.sponsorshipIcon} src={this.props.item.sponsor_image_url} alt={this.props.item.sponsor_name} /></TableCell>\n                    <TableCell>{this.props.item.sponsor_name}</TableCell>\n                    <TableCell>${this.props.item.sponsor_price}</TableCell>\n                    <TableCell><Button variant=\"outlined\" onClick={() => this.handleOpen(this.props.item.sponsorship_id, classes)}>more</Button>\n                    </TableCell>\n                </TableRow>\n                <Dialog open={this.state.openModal}\n                    onClose={this.handleOpen}\n                    aria-labelledby=\"simple-model-title\"\n                    aria-describedby=\"simple-model-description\"\n                    className={classes.modal}\n                >\n                    <DialogTitle>\n                        <Typography variant='h2'>{this.props.item.sponsor_name}</Typography>\n                        {/* <Typography variant='h4'>Price: ${item.sponsor_price}</Typography> */}\n                    </DialogTitle>\n\n                </Dialog>\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nSponsorshipPackage.propTypes = { classes: PropTypes.object.isRequired };\n\n// const putStateOnProps = reduxState => ({reduxState});\nexport default connect()(withStyles(styles)(SponsorshipPackage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SponsorshipPackage from './SponsorshipPackage';\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Paper, Modal, Dialog, DialogTitle, DialogContent, Divider, DialogContentText } from '@material-ui/core';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\n\nclass SponsorshipView extends Component {\n\n    state = {\n        sponsorship: [],\n        openModal: false,\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.oneEvent.sponsorship != this.props.oneEvent.sponsorship) {\n            this.setState({\n                sponsorship: this.props.oneEvent.sponsorship\n            })\n        }\n    }\n\n    render() {\n        // allows us to connect this.props to styles \n        console.log(`Sponsorship: `, this.state.openModal);\n        console.log('BREAKING POINT', this.props);\n\n        const { classes } = this.props;\n        return (\n            <Box my={2}>\n                <Divider className=\"venue\" />\n                <Grid container justify=\"space-evenly\">\n                    <Grid item md={10}>\n                        <h2>Sponsorship</h2>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"space-evenly\">\n                    <Grid item md={8}>\n                        <Paper>\n                            <TableContainer>\n                                <Table>\n                                    <TableHead className=\"DemoBackground\">\n                                        <TableRow>\n                                            <TableCell>Sponsor Image</TableCell>\n                                            <TableCell>Sponsorship Opportunity</TableCell>\n                                            <TableCell>Price</TableCell>\n                                            <TableCell>Details</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        \n                                        {/* Will be populated my with map*/}\n                                        {this.state.sponsorship.map(item =>\n                                            <SponsorshipPackage item={item} />\n                                        )}\n                                        {/* <Dialog open={this.state.openModal}\n                                            onClose={this.handleOpen}\n                                            aria-labelledby=\"simple-model-title\"\n                                            aria-describedby=\"simple-model-description\"\n                                            className={classes.modal}\n                                        > */}\n                                        {/* {this.props.oneEvent.sponsorship.filter(sponsorship => sponsorship.sponsorship_id === this.state.sponsorshipId).map(filterSponsor => (\n                                                <DialogTitle>\n                                                    <Typography>{filterSponsor.sponsor_name}</Typography>\n                                                </DialogTitle>\n                                            ))} */}\n                                        {/* <DialogTitle>\n                                                <Typography>HELLO THERE</Typography>\n                                                <Typography variant='h2'>{this.props.oneEvent.sponsorship[1].sponsor_name}</Typography>\n                                                {/* <Typography variant='h4'>Price: ${item.sponsor_price}</Typography> */}\n                                        {/* </DialogTitle> */}\n                                        {/* <DialogContent> */}\n                                        {/* <Paper> */}\n                                        {/* <img className={classes.modalImg} src={item.sponsor_image_url} alt={item.sponsor_name} /> */}\n                                        {/* <DialogContentText> */}\n                                        {/* </DialogContentText> */}\n                                        {/* </Paper> */}\n                                        {/* </DialogContent> */}\n                                        {/* </Dialog> */}\n                                        \n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nSponsorshipView.propTypes = { classes: PropTypes.object.isRequired };\n\nconst putStateOnProps = reduxState => ({\n    oneEvent: reduxState.oneEvent\n});\n\nexport default connect(putStateOnProps)(withStyles(styles)(SponsorshipView));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button } from '@material-ui/core';\n// MATERIAL ICONS\nimport PlaceIcon from '@material-ui/icons/Place';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\n\nclass Venue extends Component {\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        return (\n            <Box className=\"DemoBackground\" my={2}>\n                <Grid container justify=\"space-evenly\">\n                    <Grid item md={4}>\n                        {/* Venue Name */}\n                        <h2>{this.props.oneEvent.name}</h2>\n                        {/* Capacity Need to fix spacing */}\n                        {/* venue_capacity */}\n                        <Typography>Capacity: {this.props.oneEvent.venue_capacity}</Typography>\n                        <Box>\n                            <PlaceIcon />\n                            <Typography display=\"inline\">Address</Typography>\n                            {/* Address */}\n                            <Typography>{this.props.oneEvent.address}</Typography>\n                            <Typography>{this.props.oneEvent.city}, {this.props.oneEvent.state} {this.props.oneEvent.zipcode}</Typography>\n                        </Box>\n                    </Grid>\n                    <Grid item md={4}>\n                        <Box p={2} my={2} className={classes.eventTextBoxes}>\n                            {/* venue_notes */}\n                            <Typography>\n                                {this.props.oneEvent.venue_notes}\n                            </Typography>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Box>\n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nVenue.propTypes = { classes: PropTypes.object.isRequired };\n\nconst putStateOnProps = reduxState => ({\n    oneEvent: reduxState.oneEvent\n});\n\nexport default connect(putStateOnProps)(withStyles(styles)(Venue));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, TextField, Box, Button } from '@material-ui/core';\n// MATERIAL ICONS\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport PersonIcon from '@material-ui/icons/Person';\n// PropTypes allows us to import style.jsx for use\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\nimport DemoView from './DemoView';\nimport SponsorshipView from './SponsorshipView';\nimport Venue from './Venue';\n\n\n\nclass Event extends Component {\n\n    componentDidMount(){\n        document.title = \"Sponsorship Hub - Event Page\"; // Sets browser's title\n        this.props.dispatch({ type: \"FETCH_ONE_EVENT\", payload: this.props.match.params.id})\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        // allows us to connect this.props to styles \n        const { classes } = this.props;\n        return (\n            <Box>\n                <Box m={2}>\n                    <Button onClick={() => this.props.history.push(`/results`)} variant=\"outlined\">Back to Results</Button>\n                </Box>\n                <Box m={2}>\n                    <Button onClick={() => this.props.history.push(`/event/edit/${this.props.match.params.id}`)} variant=\"outlined\">Edit Event</Button>\n                </Box>\n\n                <Grid container justify=\"center\">\n                    <Grid item md={10}>\n                        <h3>Event Overview</h3>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"space-evenly\">\n                    <Grid item md={4} sm={10}>\n                        <Box className={classes.eventTextBoxes} p={2}>\n                            {/* event_description */}\n                            <Typography>\n                                {this.props.oneEvent.event_description} \n                            </Typography>\n                        </Box>\n                        <Box textAlign=\"center\" mt={1}>\n                            <CalendarTodayIcon mr={2}/>\n                            {/* year_established */}\n                            <Typography display=\"inline\">Established in {this.props.oneEvent.year_established}</Typography>\n                        </Box>\n\n                    </Grid>\n                    <Grid item md={4} sm={10}>\n                        {/* Sponsorship link */}\n                        <a href={this.props.oneEvent.event_sponsorship_kit} target='_blank'><Button fullWidth variant=\"outlined\">View Sponsorship Kit</Button></a>\n                        {/* estimated_attendance */}\n                        <Typography>Estimated Attendance: {this.props.oneEvent.estimated_attendance}</Typography>\n                        <OpenInNewIcon />\n                        {/* event_website */}\n                        <Typography display=\"inline\"><a href={this.props.oneEvent.event_website} target=\"_blank\">{this.props.oneEvent.event_website}</a> </Typography>\n                        <Box>\n                            <PersonIcon />\n                            <Typography display=\"inline\">Contact Info</Typography>\n                            {/* contact_name & contact_title */}\n                            <Typography>{this.props.oneEvent.contact_name}, {this.props.oneEvent.contact_title}</Typography>\n                            {/* contact_email*/}\n                            <Typography>{this.props.oneEvent.contact_email}</Typography>\n                            {/* contact_phone*/}\n                            <Typography>{this.props.oneEvent.contact_phone}</Typography>\n                        </Box>\n                    </Grid>\n                </Grid>\n                <DemoView/>\n                <SponsorshipView/>\n                <Venue/>\n                <Grid container justify=\"center\">\n                    <Grid item md={10}>\n                        <h2>Additional Details</h2>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"center\">\n                    <Grid item md={8}>\n                        <Box className=\"DemoBackground\" p={2}>\n                            {/* event_notes */}\n                            <Typography>\n                                {this.props.oneEvent.event_notes}\n                            </Typography>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Box> \n        )//end return\n    };//end render\n};//end class\n\n// PropTypes allows us to import style.jsx for use\nEvent.propTypes = { classes: PropTypes.object.isRequired };\n\nconst putStateOnProps = reduxState => ({\n    oneEvent:reduxState.oneEvent\n});\nexport default connect(putStateOnProps)(withStyles(styles)(Event));","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\n//components\nimport Nav from '../Structure/Nav/Nav';\nimport Footer from '../Structure/Footer/Footer';\nimport ProtectedRoute from '../Structure/ProtectedRoute/ProtectedRoute';\nimport LandingPage from '../LandingPage/LandingPage';\nimport ResultPage from '../LandingPage/ResultPage';\nimport CreateSponsor from '../Create/CreateSponsor';\nimport CreateEvent from '../Create/CreateEvent';\nimport CreateDemo from '../Create/CreateDemo';\nimport EditEvent from '../Create/EditEvent';\nimport Event from '../Event/Event';\n//style for app\nimport './App.css';\nimport { MuiThemeProvider } from '@material-ui/core/';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\nconst mainTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#F45255', // Coral\n    },\n    secondary: {\n      main: '#FFFFFF', // White\n    }\n  }\n});\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={mainTheme}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <Route exact path=\"/home\" component={LandingPage}/>\n            <ProtectedRoute exact path=\"/home/login\" component={LandingPage}/>\n            <ProtectedRoute exact path={[\"/results/:state/:startDate/:endDate\", \"/results\"]} component={ResultPage}/>\n            <ProtectedRoute exact path=\"/create-sponsor/:id\" component={CreateSponsor}/>\n            <ProtectedRoute exact path=\"/create-demo/:id\" component={CreateDemo} />\n            <ProtectedRoute exact path=\"/event/:id\" component={Event} />\n            <ProtectedRoute exact path=\"/event/edit/:id\" component={EditEvent} />\n            <ProtectedRoute path=\"/create-event\" component={CreateEvent} />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n            \n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n        </Router></MuiThemeProvider>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}